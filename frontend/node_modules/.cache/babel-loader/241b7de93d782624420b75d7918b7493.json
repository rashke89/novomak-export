{"ast":null,"code":"import Axios from \"axios\";\nimport Cookie from 'js-cookie';\nimport { USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNIN_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_LOGOUT, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL, USER_SLIDER_LIST_SUCCESS } from \"../constants/userConstants\";\nimport { PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_RANDOM_LIST_SUCCESS } from \"../constants/productConstants\";\n\nconst update = ({\n  userId,\n  name,\n  email,\n  password\n}) => async (dispatch, getState) => {\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n  dispatch({\n    type: USER_UPDATE_REQUEST,\n    payload: {\n      userId,\n      name,\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.put(\"/api/users/\" + userId, {\n      name,\n      email,\n      password\n    }, {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n      payload: data\n    });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst clientSliderList = () => async dispatch => {\n  try {\n    // dispatch({type: PRODUCT_LIST_REQUEST});\n    const {\n      data\n    } = await Axios.get(`/api/users/client/slider`);\n    dispatch({\n      type: USER_SLIDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log('error');\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/signin\", {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      name,\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/register\", {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst logout = () => dispatch => {\n  Cookie.remove(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\n\nexport { signin, register, logout, update, clientSliderList };","map":{"version":3,"sources":["D:/project/gume/novomak-export/frontend/src/actions/userActions.js"],"names":["Axios","Cookie","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNIN_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_LOGOUT","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_SLIDER_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_RANDOM_LIST_SUCCESS","update","userId","name","email","password","dispatch","getState","userSignin","userInfo","type","payload","data","put","headers","Authorization","token","set","JSON","stringify","error","message","clientSliderList","get","console","log","signin","post","register","logout","remove"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\r\nimport Cookie from 'js-cookie';\r\nimport {\r\n  USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS,\r\n  USER_SIGNIN_FAIL, USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_LOGOUT, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL, USER_SLIDER_LIST_SUCCESS\r\n} from \"../constants/userConstants\";\r\nimport {PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_RANDOM_LIST_SUCCESS} from \"../constants/productConstants\";\r\n\r\nconst update = ({ userId, name, email, password }) => async (dispatch, getState) => {\r\n  const { userSignin: { userInfo } } = getState();\r\n  dispatch({ type: USER_UPDATE_REQUEST, payload: { userId, name, email, password } });\r\n  try {\r\n    const { data } = await Axios.put(\"/api/users/\" + userId,\r\n      { name, email, password }, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + userInfo.token\r\n      }\r\n    });\r\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\r\n    Cookie.set('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({ type: USER_UPDATE_FAIL, payload: error.message });\r\n  }\r\n}\r\nconst clientSliderList = () => async (dispatch) => {\r\n  try {\r\n    // dispatch({type: PRODUCT_LIST_REQUEST});\r\n    const {data} = await Axios.get(\r\n        `/api/users/client/slider`,);\r\n    dispatch({type: USER_SLIDER_LIST_SUCCESS, payload: data});\r\n  } catch (error) {\r\n    console.log('error');\r\n    dispatch({type: PRODUCT_LIST_FAIL, payload: error.message});\r\n  }\r\n};\r\nconst signin = (email, password) => async (dispatch) => {\r\n  dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, password } });\r\n  try {\r\n    const { data } = await Axios.post(\"/api/users/signin\", { email, password });\r\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\r\n    Cookie.set('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({ type: USER_SIGNIN_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst register = (name, email, password) => async (dispatch) => {\r\n  dispatch({ type: USER_REGISTER_REQUEST, payload: { name, email, password } });\r\n  try {\r\n    const { data } = await Axios.post(\"/api/users/register\", { name, email, password });\r\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n    Cookie.set('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({ type: USER_REGISTER_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst logout = () => (dispatch) => {\r\n  Cookie.remove(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT })\r\n};\r\n\r\nexport { signin, register, logout, update, clientSliderList };"]},"metadata":{},"sourceType":"module"}