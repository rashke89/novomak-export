{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\gume\\\\novomak-export\\\\frontend\\\\src\\\\screens\\\\CartScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport { addToCart, clearCart, removeFromCart, updateCartItemQty } from '../actions/cartActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Axios from \"axios\";\nimport * as config from \"../config\";\nlet int = 5;\n\nfunction CartScreen(props) {\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart;\n  const productId = props.match.params.id;\n  const qty = props.location.search ? Number(props.location.search.split(\"=\")[1]) : 1;\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [address, setAddress] = useState('');\n  const [city, setCity] = useState('');\n  const [phone, setPhone] = useState('');\n  const [email, setEmail] = useState('');\n  const [note, setNote] = useState('');\n  const [seconds, setSeconds] = useState(0);\n  const [formSubmitted, setFormSubmitted] = useState(false);\n  const [validForm, setValidForm] = useState(true);\n  const [apiStarted, setApiStarted] = useState(false);\n  const [apiSuccess, setApiSuccess] = useState(false);\n  const [apiError, setApiError] = useState(false);\n  const [order, setOrder] = useState({});\n\n  const removeFromCartHandler = productId => {\n    dispatch(removeFromCart(productId));\n  };\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n\n    ;\n    let options = {\n      behavior: 'smooth'\n    };\n    setTimeout(() => {\n      document.getElementsByClassName('cart')[0].scrollIntoView(options);\n    }, 500);\n  }, []); // useEffect(() => {\n  //   console.log(cartItems);\n  // }, [cartItems])\n\n  const checkoutHandler = () => {\n    setFormSubmitted(true);\n\n    if (!name || !lastName || !email || !address || !city || !phone) {\n      setValidForm(false);\n      return 'validacija';\n    }\n\n    setApiStarted(true);\n    let orderBody = {\n      user: {\n        name,\n        lastName,\n        email,\n        address,\n        phone,\n        city,\n        note\n      },\n      cart,\n      priceSum: cartItems.reduce((a, c) => a + c.Cena * c.qty, 0).toFixed(2)\n    };\n    Axios.post(`/api/orders/submit`, orderBody).then(data => {\n      setOrder(data.data.data.newOrder);\n      setApiSuccess(true);\n      setTimeout(() => {\n        dispatch(clearCart());\n      }, 8000);\n      setTimeout(() => {\n        props.history.push('/');\n      }, 10000);\n    }).catch(error => {\n      setApiError(true);\n      console.log(error);\n    }).finally(() => {\n      setApiStarted(false);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"cart-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"Korpa\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"Cena\")), cartItems.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"Korpa je prazna\") : cartItems.map((item, id) => /*#__PURE__*/React.createElement(\"li\", {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: config.formatImagePath(item.Slika),\n    alt: \"product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-name mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/proizvod/\" + item._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, item.Naziv)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 19\n    }\n  }, \"Broj proizvoda:\", /*#__PURE__*/React.createElement(\"select\", {\n    className: \"mr-3 my-3\",\n    value: item.qty,\n    onChange: e => dispatch(updateCartItemQty(item._id, e.target.value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  }, [...Array(item.Lager).keys()].map(x => /*#__PURE__*/React.createElement(\"option\", {\n    key: x + 1,\n    value: x + 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }, x + 1))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"button\",\n    onClick: () => removeFromCartHandler(item._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, \"Izbrisi\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, item.Cena, \" rsd\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, \"Ukupno (\", cartItems.reduce((a, c) => a + Number(c.qty), 0), \" proizvoda):\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, cartItems.reduce((a, c) => a + c.Cena * c.qty, 0).toFixed(2), \" rsd\")), formSubmitted && !validForm && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 39\n    }\n  }, \"Potrebno je popuniti sva obavezna polja kako biste narucili proizvod(e).\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Ime (obavezno)\",\n    type: \"text\",\n    name: \"name\",\n    value: name,\n    id: \"name\",\n    className: `${formSubmitted && !name ? 'not-valid' : ''}`,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Prezime (obavezno)\",\n    type: \"text\",\n    name: \"lastName\",\n    value: lastName,\n    id: \"lastName\",\n    className: `${formSubmitted && !lastName ? 'not-valid' : ''}`,\n    onChange: e => setLastName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Broj telefona (obavezno)\",\n    type: \"text\",\n    name: \"phone\",\n    value: phone,\n    id: \"phone\",\n    className: `${formSubmitted && !phone ? 'not-valid' : ''}`,\n    onChange: e => setPhone(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Adresa (obavezno)\",\n    type: \"text\",\n    name: \"address\",\n    value: address,\n    id: \"address\",\n    className: `${formSubmitted && !address ? 'not-valid' : ''}`,\n    onChange: e => setAddress(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Grad (obavezno)\",\n    type: \"text\",\n    name: \"city\",\n    value: city,\n    id: \"city\",\n    className: `${formSubmitted && !city ? 'not-valid' : ''}`,\n    onChange: e => setCity(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"E-mail (obavezno)\",\n    type: \"mail\",\n    name: \"email\",\n    value: email,\n    id: \"email\",\n    className: `${formSubmitted && !email ? 'not-valid' : ''}`,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    style: {\n      padding: \"10px\"\n    },\n    placeholder: \"Napomena...\",\n    name: \"note\",\n    value: note,\n    id: \"note\",\n    className: \"w-100\",\n    rows: 4,\n    onChange: e => setNote(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }\n  })), apiError && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-text mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 20\n    }\n  }, \"Doslo je do greske prilikom narucivanja, pokusajte ponovo.\"), apiSuccess && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"success-text mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 22\n    }\n  }, \"Uspesno ste porucili proizvod(e). Broj porudzbine: \", /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 106\n    }\n  }, order._id), \". Proverite vas mail. \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 146\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }, \"Redirekcija na pocetnu stranu za: 10s\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: checkoutHandler,\n    className: `${!cartItems.length ? 'btn-disabled' : ''} button primary full-width mt-5`,\n    disabled: !cartItems.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }, apiStarted && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spinner-border\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, \"Loading...\")), \"Naruci\")));\n}\n\nexport default CartScreen;","map":{"version":3,"sources":["D:/project/gume/novomak-export/frontend/src/screens/CartScreen.js"],"names":["React","useEffect","useState","addToCart","clearCart","removeFromCart","updateCartItemQty","useDispatch","useSelector","Link","Axios","config","int","CartScreen","props","cart","state","cartItems","productId","match","params","id","qty","location","search","Number","split","dispatch","name","setName","lastName","setLastName","address","setAddress","city","setCity","phone","setPhone","email","setEmail","note","setNote","seconds","setSeconds","formSubmitted","setFormSubmitted","validForm","setValidForm","apiStarted","setApiStarted","apiSuccess","setApiSuccess","apiError","setApiError","order","setOrder","removeFromCartHandler","options","behavior","setTimeout","document","getElementsByClassName","scrollIntoView","checkoutHandler","orderBody","user","priceSum","reduce","a","c","Cena","toFixed","post","then","data","newOrder","history","push","catch","error","console","log","finally","length","map","item","formatImagePath","Slika","_id","Naziv","e","target","value","Array","Lager","keys","x","padding"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {addToCart, clearCart, removeFromCart, updateCartItemQty} from '../actions/cartActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Axios from \"axios\";\r\nimport * as config from \"../config\";\r\nlet int = 5;\r\nfunction CartScreen(props) {\r\n\r\n  const cart = useSelector(state => state.cart);\r\n  const { cartItems } = cart;\r\n  const productId = props.match.params.id;\r\n  const qty = props.location.search ? Number(props.location.search.split(\"=\")[1]) : 1;\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [note, setNote] = useState('');\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [formSubmitted, setFormSubmitted] = useState(false);\r\n  const [validForm, setValidForm] = useState(true);\r\n  const [apiStarted, setApiStarted] = useState(false);\r\n  const [apiSuccess, setApiSuccess] = useState(false);\r\n  const [apiError, setApiError] = useState(false);\r\n  const [order, setOrder] = useState({});\r\n  const removeFromCartHandler = (productId) => {\r\n    dispatch(removeFromCart(productId));\r\n  }\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    };\r\n    let options = {\r\n      behavior: 'smooth'\r\n    };\r\n    setTimeout(() => {\r\n      document.getElementsByClassName('cart')[0].scrollIntoView(options)\r\n    }, 500)\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(cartItems);\r\n  // }, [cartItems])\r\n\r\n  const checkoutHandler = () => {\r\n    setFormSubmitted(true);\r\n    if (!name || !lastName || !email || !address || !city || !phone) {\r\n      setValidForm(false);\r\n      return 'validacija'\r\n    }\r\n    setApiStarted(true);\r\n    let orderBody = {\r\n      user: {\r\n        name, lastName, email, address, phone, city, note,\r\n      },\r\n       cart,\r\n       priceSum: cartItems.reduce((a, c) => a + c.Cena * c.qty, 0).toFixed(2)\r\n    };\r\n    Axios.post(`/api/orders/submit`, orderBody)\r\n        .then(data => {\r\n          setOrder(data.data.data.newOrder);\r\n          setApiSuccess(true);\r\n          setTimeout(() => {\r\n            dispatch(clearCart());\r\n          }, 8000)\r\n          setTimeout(() => {\r\n            props.history.push('/');\r\n          }, 10000)\r\n        })\r\n        .catch(error => {\r\n          setApiError(true);\r\n          console.log(error);\r\n        })\r\n        .finally(() => {\r\n          setApiStarted(false);\r\n        });\r\n  };\r\n\r\n  return <div className=\"cart\">\r\n    <div className=\"cart-list\">\r\n      <ul className=\"cart-list-container\">\r\n        <li>\r\n          <h3>\r\n            Korpa\r\n          </h3>\r\n          <div>\r\n            Cena\r\n          </div>\r\n        </li>\r\n        {\r\n          cartItems.length === 0 ?\r\n            <div>\r\n              Korpa je prazna\r\n          </div>\r\n            :\r\n            cartItems.map((item, id) =>\r\n              <li key={id}>\r\n                <div className=\"cart-image\">\r\n                  <img src={config.formatImagePath(item.Slika)} alt=\"product\" />\r\n                </div>\r\n                <div className=\"cart-name mb-3\">\r\n                  <div>\r\n                    <Link to={\"/proizvod/\" + item._id}>\r\n                      {item.Naziv}\r\n                    </Link>\r\n\r\n                  </div>\r\n                  <div>\r\n                    Broj proizvoda:\r\n                  <select className=\"mr-3 my-3\" value={item.qty} onChange={(e) => dispatch(updateCartItemQty(item._id, e.target.value))}>\r\n                      {[...Array(item.Lager).keys()].map(x =>\r\n                        <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n                      )}\r\n                    </select>\r\n\r\n                    <button type=\"button\" className=\"button\" onClick={() => removeFromCartHandler(item._id)} >\r\n                      Izbrisi\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"cart-price\">\r\n                  {item.Cena} rsd\r\n                </div>\r\n              </li>\r\n            )\r\n        }\r\n      </ul>\r\n\r\n    </div>\r\n    <div className=\"cart-action\">\r\n      <h3 className=\"mb-5\">\r\n        Ukupno ({cartItems.reduce((a, c) => a + Number(c.qty), 0)} proizvoda):\r\n        <span className=\"float-right\">\r\n          {cartItems.reduce((a, c) => a + c.Cena * c.qty, 0).toFixed(2)} rsd\r\n        </span>\r\n      </h3>\r\n      {formSubmitted && !validForm && <p className=\"error-text\">Potrebno je popuniti sva obavezna polja kako biste narucili proizvod(e).</p>}\r\n      <div className=\"form-modal\">\r\n          {/*<label htmlFor=\"name\">Ime</label>*/}\r\n          <input\r\n              placeholder=\"Ime (obavezno)\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              id=\"name\"\r\n              className={`${formSubmitted && !name ? 'not-valid' : ''}`}\r\n              onChange={(e) => setName(e.target.value)}\r\n          />\r\n          {/*<label htmlFor=\"sureName\">Prezime</label>*/}\r\n          <input\r\n              placeholder=\"Prezime (obavezno)\"\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              value={lastName}\r\n              id=\"lastName\"\r\n              className={`${formSubmitted && !lastName ? 'not-valid' : ''}`}\r\n              onChange={(e) => setLastName(e.target.value)}\r\n          />\r\n        {/*<label htmlFor=\"phone\">Broj telefona</label>*/}\r\n        <input\r\n            placeholder=\"Broj telefona (obavezno)\"\r\n            type=\"text\"\r\n            name=\"phone\"\r\n            value={phone}\r\n            id=\"phone\"\r\n            className={`${formSubmitted && !phone ? 'not-valid' : ''}`}\r\n            onChange={(e) => setPhone(e.target.value)}\r\n        />\r\n          {/*<label htmlFor=\"address\">Adresa</label>*/}\r\n          <input\r\n              placeholder=\"Adresa (obavezno)\"\r\n              type=\"text\"\r\n              name=\"address\"\r\n              value={address}\r\n              id=\"address\"\r\n              className={`${formSubmitted && !address ? 'not-valid' : ''}`}\r\n              onChange={(e) => setAddress(e.target.value)}\r\n          />\r\n          {/*<label htmlFor=\"city\">Grad</label>*/}\r\n          <input\r\n              placeholder=\"Grad (obavezno)\"\r\n              type=\"text\"\r\n              name=\"city\"\r\n              value={city}\r\n              id=\"city\"\r\n              className={`${formSubmitted && !city ? 'not-valid' : ''}`}\r\n              onChange={(e) => setCity(e.target.value)}\r\n          />\r\n          {/*<label htmlFor=\"email\">E mail</label>*/}\r\n          <input\r\n              placeholder=\"E-mail (obavezno)\"\r\n              type=\"mail\"\r\n              name=\"email\"\r\n              value={email}\r\n              id=\"email\"\r\n              className={`${formSubmitted && !email ? 'not-valid' : ''}`}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        <textarea\r\n            style={{padding: \"10px\"}}\r\n            placeholder=\"Napomena...\"\r\n            name=\"note\"\r\n            value={note}\r\n            id=\"note\"\r\n            className=\"w-100\"\r\n            rows={4}\r\n            onChange={(e) => setNote(e.target.value)}\r\n        ></textarea>\r\n\r\n      </div>\r\n      {apiError && <p className=\"error-text mt-5\">Doslo je do greske prilikom narucivanja, pokusajte ponovo.</p>}\r\n      {apiSuccess && <p className=\"success-text mt-5\">Uspesno ste porucili proizvod(e). Broj porudzbine: <i>{order._id}</i>. Proverite vas mail. <br/>\r\n        <span>\r\n          Redirekcija na pocetnu stranu za: 10s\r\n        </span>\r\n      </p>}\r\n      <button onClick={checkoutHandler} className={`${!cartItems.length ? 'btn-disabled' : ''} button primary full-width mt-5`} disabled={!cartItems.length}>\r\n        {apiStarted && <div className=\"spinner-border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </div>}\r\n        Naruci\r\n      </button>\r\n\r\n    </div>\r\n\r\n  </div>\r\n}\r\n\r\nexport default CartScreen;"]},"metadata":{},"sourceType":"module"}