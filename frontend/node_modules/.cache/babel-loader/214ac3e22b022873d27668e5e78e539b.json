{"ast":null,"code":"import { CATEGORY_LIST_REQUEST, CATEGORY_LIST_SUCCESS, CATEGORY_LIST_FAIL, CATEGORY_DETAILS_REQUEST, CATEGORY_DETAILS_SUCCESS, CATEGORY_DETAILS_FAIL, CATEGORY_SAVE_REQUEST, CATEGORY_SAVE_SUCCESS, CATEGORY_SAVE_FAIL, CATEGORY_DELETE_SUCCESS, CATEGORY_DELETE_FAIL, CATEGORY_DELETE_REQUEST, CATEGORY_REVIEW_SAVE_REQUEST, CATEGORY_REVIEW_SAVE_FAIL, CATEGORY_REVIEW_SAVE_SUCCESS } from '../constants/categoryConstants';\nimport axios from 'axios';\nimport Axios from 'axios';\n\nconst listCategories = (category = '', searchKeyword = '', sortOrder = '') => async dispatch => {\n  try {\n    // debugger\n    dispatch({\n      type: CATEGORY_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/category');\n    dispatch({\n      type: CATEGORY_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveCategory = category => async (dispatch, getState) => {\n  // try {\n  dispatch({\n    type: CATEGORY_SAVE_REQUEST,\n    payload: category\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  if (!category._id) {\n    Axios.post(`/api/category`, category, {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    }).then(data => {\n      dispatch({\n        type: CATEGORY_SAVE_SUCCESS,\n        payload: data.data\n      });\n    }).catch(error => {\n      dispatch({\n        type: CATEGORY_SAVE_FAIL,\n        payload: error.response.data\n      });\n    }).finally(() => {\n      dispatch(listCategories());\n    });\n  } else {\n    Axios.put(`/api/category/${category.selectedCategory}/${category._id || 0}`, category, {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    }).then(data => {\n      dispatch({\n        type: CATEGORY_SAVE_SUCCESS,\n        payload: data.data\n      });\n    }).catch(error => {\n      dispatch({\n        type: CATEGORY_SAVE_FAIL,\n        payload: error.response.data\n      });\n    }).finally(() => {\n      dispatch(listCategories());\n    });\n  }\n};\n\nconst deleteCategory = category => async (dispatch, getState) => {\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n  dispatch({\n    type: CATEGORY_DELETE_REQUEST,\n    payload: category.id\n  });\n  axios.delete(`/api/category/${category.selectedCategory}/${category.id}`, {\n    headers: {\n      Authorization: 'Bearer ' + userInfo.token\n    }\n  }).then(data => {\n    dispatch({\n      type: CATEGORY_DELETE_SUCCESS,\n      payload: data.data\n    });\n  }).catch(error => dispatch({\n    type: CATEGORY_DELETE_FAIL,\n    payload: error.response.data\n  })).finally(() => {\n    dispatch(listCategories());\n  });\n};\n\nexport { listCategories, saveCategory, deleteCategory };","map":{"version":3,"sources":["D:/project/gume/novomak-export/frontend/src/actions/categoryAction.js"],"names":["CATEGORY_LIST_REQUEST","CATEGORY_LIST_SUCCESS","CATEGORY_LIST_FAIL","CATEGORY_DETAILS_REQUEST","CATEGORY_DETAILS_SUCCESS","CATEGORY_DETAILS_FAIL","CATEGORY_SAVE_REQUEST","CATEGORY_SAVE_SUCCESS","CATEGORY_SAVE_FAIL","CATEGORY_DELETE_SUCCESS","CATEGORY_DELETE_FAIL","CATEGORY_DELETE_REQUEST","CATEGORY_REVIEW_SAVE_REQUEST","CATEGORY_REVIEW_SAVE_FAIL","CATEGORY_REVIEW_SAVE_SUCCESS","axios","Axios","listCategories","category","searchKeyword","sortOrder","dispatch","type","data","get","payload","error","message","saveCategory","getState","userSignin","userInfo","_id","post","headers","Authorization","token","then","catch","response","finally","put","selectedCategory","deleteCategory","id","delete"],"mappings":"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","sourcesContent":["import {\r\n    CATEGORY_LIST_REQUEST,\r\n    CATEGORY_LIST_SUCCESS,\r\n    CATEGORY_LIST_FAIL,\r\n    CATEGORY_DETAILS_REQUEST,\r\n    CATEGORY_DETAILS_SUCCESS,\r\n    CATEGORY_DETAILS_FAIL,\r\n    CATEGORY_SAVE_REQUEST,\r\n    CATEGORY_SAVE_SUCCESS,\r\n    CATEGORY_SAVE_FAIL,\r\n    CATEGORY_DELETE_SUCCESS,\r\n    CATEGORY_DELETE_FAIL,\r\n    CATEGORY_DELETE_REQUEST,\r\n    CATEGORY_REVIEW_SAVE_REQUEST,\r\n    CATEGORY_REVIEW_SAVE_FAIL,\r\n    CATEGORY_REVIEW_SAVE_SUCCESS,\r\n} from '../constants/categoryConstants';\r\nimport axios from 'axios';\r\nimport Axios from 'axios';\r\n\r\nconst listCategories = (\r\n    category = '',\r\n    searchKeyword = '',\r\n    sortOrder = ''\r\n) => async (dispatch) => {\r\n    try {\r\n        // debugger\r\n        dispatch({type: CATEGORY_LIST_REQUEST});\r\n        const {data} = await axios.get('/api/category');\r\n        dispatch({type: CATEGORY_LIST_SUCCESS, payload: data});\r\n    } catch (error) {\r\n        dispatch({type: CATEGORY_LIST_FAIL, payload: error.message});\r\n    }\r\n};\r\nconst saveCategory = (category) => async (dispatch, getState) => {\r\n    // try {\r\n    dispatch({type: CATEGORY_SAVE_REQUEST, payload: category});\r\n    const {\r\n        userSignin: {userInfo},\r\n    } = getState();\r\n    if (!category._id) {\r\n        Axios.post(`/api/category`, category, {\r\n            headers: {\r\n                Authorization: 'Bearer ' + userInfo.token,\r\n            },\r\n        })\r\n            .then(data => {\r\n                dispatch({type: CATEGORY_SAVE_SUCCESS, payload: data.data})\r\n            })\r\n            .catch(error => {\r\n                dispatch({type: CATEGORY_SAVE_FAIL, payload: error.response.data});\r\n            })\r\n            .finally(() => {\r\n                dispatch(listCategories())\r\n            });\r\n    } else {\r\n        Axios.put(\r\n            `/api/category/${category.selectedCategory}/${category._id || 0}`,\r\n            category,\r\n            {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + userInfo.token,\r\n                },\r\n            })\r\n            .then(data => {\r\n                dispatch({type: CATEGORY_SAVE_SUCCESS, payload: data.data})\r\n            })\r\n            .catch(error => {\r\n                dispatch({type: CATEGORY_SAVE_FAIL, payload: error.response.data});\r\n            })\r\n            .finally(() => {\r\n                dispatch(listCategories())\r\n            });\r\n    }\r\n};\r\n\r\nconst deleteCategory = (category) => async (dispatch, getState) => {\r\n    const {\r\n        userSignin: {userInfo},\r\n    } = getState();\r\n    dispatch({type: CATEGORY_DELETE_REQUEST, payload: category.id});\r\n    axios.delete(`/api/category/${category.selectedCategory}/${category.id}`, {\r\n        headers: {\r\n            Authorization: 'Bearer ' + userInfo.token,\r\n        },\r\n    })\r\n        .then((data) => {\r\n            dispatch({type: CATEGORY_DELETE_SUCCESS, payload: data.data})\r\n        })\r\n        .catch(error => dispatch({type: CATEGORY_DELETE_FAIL, payload: error.response.data}))\r\n        .finally(() => {\r\n            dispatch(listCategories())\r\n        });\r\n};\r\n\r\nexport {\r\n    listCategories,\r\n    saveCategory,\r\n    deleteCategory,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}