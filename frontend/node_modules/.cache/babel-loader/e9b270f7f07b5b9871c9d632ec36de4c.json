{"ast":null,"code":"var _jsxFileName = \"/Users/radosmijatovic/projects/novomak-export/frontend/src/screens/ProductsScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { saveProduct, listProducts, deleteProdcut } from '../actions/productActions';\nimport Pagination from \"react-js-pagination\";\nimport { listCategories } from \"../actions/categoryAction\";\n\nfunction ProductsScreen(props) {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [id, setId] = useState('');\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState('');\n  const [image, setImage] = useState('');\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState('');\n  const [description, setDescription] = useState('');\n  const [width, setWidth] = useState('');\n  const [height, setHeight] = useState('');\n  const [diameter, setDiameter] = useState('');\n  const [season, setSeason] = useState('');\n  const [manufacturer, setManufacturer] = useState('');\n  const [key, setKey] = useState('');\n  const [xmlApiMsg, setXmlApiMsg] = useState('');\n  const [xmlApiStatus, setXmlApiStatus] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const productList = useSelector(state => state.productList);\n  const {\n    loading,\n    products,\n    error,\n    totalItems\n  } = productList;\n  const [page, setPage] = useState(1);\n  const [totalPerPage, setTotalPerPage] = useState(32);\n  const [searchKeyword, setSearchKeyword] = useState('');\n  const [marked, setMarked] = useState('0');\n  const {\n    categories,\n    diameters,\n    manufacturers,\n    heights,\n    widths,\n    seasons\n  } = useSelector(state => state.categoryList.categories);\n  const productSave = useSelector(state => state.productSave);\n  const {\n    loading: loadingSave,\n    success: successSave,\n    error: errorSave\n  } = productSave;\n  const productDelete = useSelector(state => state.productDelete);\n  const {\n    loading: loadingDelete,\n    success: successDelete,\n    error: errorDelete\n  } = productDelete;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (successSave) {\n      setModalVisible(false);\n    }\n\n    dispatch(listProducts('', searchKeyword, '', 1));\n    dispatch(listCategories());\n    return () => {//\n    };\n  }, [successSave, successDelete]);\n\n  const openModal = product => {\n    // setModalVisible(true);\n    setId(product._id || '');\n    setKey(product.Sifra || '');\n    setName(product.Naziv || '');\n    setPrice(product.Cena || '');\n    setDescription(product.Specifikacija || '');\n    setImage(product.Slika || '');\n    setManufacturer(product.Proizvodjac || '');\n    setCategory(product.Kategorija || '');\n    setCountInStock(product.Lager || '');\n    setSeason(product.Sezona || '');\n    setWidth(product.Sirina || '');\n    setHeight(product.Visina || '');\n    setDiameter(product.Precnik || '');\n    setMarked(product.Istaknut);\n  };\n\n  const submitSearchHandler = e => {\n    e.preventDefault();\n    setPage(1);\n    dispatch(listProducts('', searchKeyword, '', 1));\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(saveProduct({\n      _id: id,\n      manufacturer,\n      width,\n      height,\n      diameter,\n      season,\n      key,\n      name,\n      price,\n      image,\n      brand,\n      category,\n      countInStock: countInStock || 0,\n      description,\n      marked\n    }));\n  };\n\n  const handlePagination = num => {\n    setPage(num);\n    dispatch(listProducts('', searchKeyword, '', num));\n  };\n\n  const deleteHandler = product => {\n    dispatch(deleteProdcut(product._id));\n  };\n\n  const uploadFileHandler = e => {\n    const file = e.target.files[0];\n    const bodyFormData = new FormData();\n    bodyFormData.append('image', file);\n    setUploading(true);\n    axios.post('/api/uploads', bodyFormData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      setImage(response.data);\n      setUploading(false);\n    }).catch(err => {\n      console.log(err);\n      setUploading(false);\n    });\n  };\n\n  const uploadXmlFileHandler = e => {\n    const file = e.target.files[0];\n    const bodyFormData = new FormData();\n    bodyFormData.append('xml', file);\n    setUploading(true);\n    axios.post('/api/xml', bodyFormData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      setXmlApiMsg(response.data.message);\n      setXmlApiStatus(response.status);\n      setUploading(false);\n      var closeEl = document.querySelector('.-xml-close');\n      setTimeout(() => {\n        dispatch(listProducts('', searchKeyword, '', page));\n        closeEl.click();\n      }, 3000);\n    }).catch(err => {\n      setXmlApiMsg(err.response.data.message);\n      setXmlApiStatus(err.response.status);\n      console.log('error on XML upload', err.response);\n      setUploading(false);\n    }).finally(() => {});\n  };\n\n  const onChangeValue = e => {\n    setMarked(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content content-margined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-header mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, \"Proizovdi\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: 'd-inline-block',\n    onSubmit: submitSearchHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"searchKeyword\",\n    onChange: e => setSearchKeyword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 25\n    }\n  }, \"Search\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary mx-5\",\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#exampleModal\",\n    onClick: () => openModal({}),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }\n  }, \"Kreiraj proizovd\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#exampleModal1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 21\n    }\n  }, \"Ubaci XML\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal fade bd-example-modal-lg\",\n    id: \"exampleModal\",\n    tabIndex: \"-1\",\n    role: \"dialog\",\n    \"aria-labelledby\": \"exampleModalLabel\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-dialog\",\n    role: \"document\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"modal-title\",\n    id: \"exampleModalLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 29\n    }\n  }, id ? 'Izmeni' : 'Kreiraj', \" proizvod\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"close\",\n    \"data-dismiss\": \"modal\",\n    \"aria-label\": \"Close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 33\n    }\n  }, \"\\xD7\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 45\n    }\n  }, \"Sifra\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: key,\n    id: \"name\",\n    onChange: e => setKey(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 45\n    }\n  }, \"Ime\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: name,\n    id: \"name\",\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 45\n    }\n  }, \"Cena\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"price\",\n    value: price,\n    id: \"price\",\n    onChange: e => setPrice(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 45\n    }\n  }, \"Slika\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"image\",\n    value: image,\n    id: \"image\",\n    onChange: e => setImage(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"w-100\",\n    onChange: uploadFileHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 45\n    }\n  }), uploading && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 59\n    }\n  }, \"Uploading...\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 45\n    }\n  }, \"Kategorija\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"category\",\n    value: category,\n    onChange: e => setCategory(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 49\n    }\n  }), categories === null || categories === void 0 ? void 0 : categories.map(item => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: item.name,\n      key: item.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 60\n      }\n    }, item.name);\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"manufacturer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 45\n    }\n  }, \"Proizvodjac\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"manufacturer\",\n    value: manufacturer,\n    onChange: e => setManufacturer(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 49\n    }\n  }), manufacturers === null || manufacturers === void 0 ? void 0 : manufacturers.map(item => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: item.name,\n      key: item.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 60\n      }\n    }, item.name);\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"width\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 45\n    }\n  }, \"Sirina\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"width\",\n    value: width,\n    onChange: e => setWidth(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 49\n    }\n  }), widths === null || widths === void 0 ? void 0 : widths.map(item => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: item.name,\n      key: item.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 60\n      }\n    }, item.name);\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"countInStock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 45\n    }\n  }, \"Visina\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"countInStock\",\n    value: height,\n    onChange: e => setHeight(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 49\n    }\n  }), heights === null || heights === void 0 ? void 0 : heights.map(item => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: item.name,\n      key: item.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 60\n      }\n    }, item.name);\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"diameter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 45\n    }\n  }, \"Precnik\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"diameter\",\n    value: diameter,\n    onChange: e => setDiameter(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 49\n    }\n  }), diameters === null || diameters === void 0 ? void 0 : diameters.map(item => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: item.name,\n      key: item.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 60\n      }\n    }, item.name);\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"countInStock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 45\n    }\n  }, \"Broj raspolozivih jedinica\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"countInStock\",\n    value: countInStock,\n    id: \"countInStock\",\n    onChange: e => setCountInStock(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"season\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 45\n    }\n  }, \"Sezona\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"season\",\n    value: season,\n    onChange: e => setSeason(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 49\n    }\n  }), seasons === null || seasons === void 0 ? void 0 : seasons.map(item => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: item.name,\n      key: item.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 60\n      }\n    }, item.name);\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 45\n    }\n  }, \"Opis\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"description\",\n    value: description,\n    id: \"description\",\n    className: \"w-100\",\n    rows: 6,\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    onChange: onChangeValue,\n    className: \"marked-inputs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 49\n    }\n  }, \"Istaknut\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    value: \"1\",\n    name: \"gender\",\n    checked: marked === '1',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 49\n    }\n  }), \" Da\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    value: \"0\",\n    name: \"gender\",\n    checked: marked === '0',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 49\n    }\n  }), \" Ne\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    id: \"close-modal-btn\",\n    \"data-dismiss\": \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 29\n    }\n  }, \"Odustani\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    onClick: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 29\n    }\n  }, id ? 'Izmeni' : 'Kreiraj'))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal fade bd-example-modal-lg\",\n    id: \"exampleModal1\",\n    tabIndex: \"-1\",\n    role: \"dialog\",\n    \"aria-labelledby\": \"exampleModalLabel\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-dialog\",\n    role: \"document\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"modal-title\",\n    id: \"exampleModalLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 29\n    }\n  }, \"Ubaci XML fajl\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"close -xml-close\",\n    \"data-dismiss\": \"modal\",\n    \"aria-label\": \"Close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 33\n    }\n  }, \"\\xD7\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 45\n    }\n  }, \"XML file\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"w-100\",\n    onChange: uploadXmlFileHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 45\n    }\n  }), uploading && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 59\n    }\n  }, \"Uploading...\")), xmlApiMsg && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 55\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: xmlApiStatus > 250 ? 'error-text p-3' : 'success-text p-3',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 45\n    }\n  }, \"STATUS ubacivanja XML fajla: \", xmlApiMsg)))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    id: \"close-modal-btn\",\n    \"data-dismiss\": \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 29\n    }\n  }, \"Zatvori\"))))), modalVisible && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 33\n    }\n  }, \"Kreiraj Proizovd\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 29\n    }\n  }, loadingSave && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 49\n    }\n  }, \"Loading...\"), errorSave && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 47\n    }\n  }, errorSave)), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 33\n    }\n  }, \"Ime\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: name,\n    id: \"name\",\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 33\n    }\n  }, \"Cena\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"price\",\n    value: price,\n    id: \"price\",\n    onChange: e => setPrice(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 33\n    }\n  }, \"Slika\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"image\",\n    value: image,\n    id: \"image\",\n    onChange: e => setImage(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: uploadFileHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 33\n    }\n  }), uploading && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 47\n    }\n  }, \"Uploading...\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"brand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 33\n    }\n  }, \"Brend\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"brand\",\n    value: brand,\n    id: \"brand\",\n    onChange: e => setBrand(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"countInStock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 33\n    }\n  }, \"Broj raspolozivih jedinica\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"countInStock\",\n    value: countInStock,\n    id: \"countInStock\",\n    onChange: e => setCountInStock(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 33\n    }\n  }, \"Kategorija\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"category\",\n    value: category,\n    id: \"category\",\n    onChange: e => setCategory(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 33\n    }\n  }, \"Opis\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"description\",\n    value: description,\n    id: \"description\",\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"button primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 33\n    }\n  }, id ? 'Izmeni' : 'Kreiraj')), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setModalVisible(false),\n    className: \"button secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 33\n    }\n  }, \"Nazad\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 25\n    }\n  }, \"Sifra\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 25\n    }\n  }, \"Ime\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 25\n    }\n  }, \"Cena\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 25\n    }\n  }, \"Kategorija\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 25\n    }\n  }, \"Proizvodjac\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 21\n    }\n  }, products === null || products === void 0 ? void 0 : products.map(product => /*#__PURE__*/React.createElement(\"tr\", {\n    key: product._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"align-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 29\n    }\n  }, product.Sifra), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 29\n    }\n  }, product.Naziv), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 29\n    }\n  }, product.Cena), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 29\n    }\n  }, product.Kategorija), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 29\n    }\n  }, product.Proizvodjac), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#exampleModal\",\n    className: \"button\",\n    onClick: () => openModal(product),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 33\n    }\n  }, \"Edit\"), ' ', /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    onClick: () => deleteHandler(product),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 33\n    }\n  }, \"Delete\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pagination-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 21\n    }\n  }, totalItems && /*#__PURE__*/React.createElement(Pagination, {\n    activePage: page,\n    itemsCountPerPage: totalPerPage,\n    totalItemsCount: totalItems,\n    pageRangeDisplayed: 5,\n    onChange: handlePagination,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 40\n    }\n  })))));\n}\n\nexport default ProductsScreen;","map":{"version":3,"sources":["/Users/radosmijatovic/projects/novomak-export/frontend/src/screens/ProductsScreen.js"],"names":["React","useEffect","useState","useSelector","useDispatch","axios","saveProduct","listProducts","deleteProdcut","Pagination","listCategories","ProductsScreen","props","modalVisible","setModalVisible","id","setId","name","setName","price","setPrice","image","setImage","brand","setBrand","category","setCategory","countInStock","setCountInStock","description","setDescription","width","setWidth","height","setHeight","diameter","setDiameter","season","setSeason","manufacturer","setManufacturer","key","setKey","xmlApiMsg","setXmlApiMsg","xmlApiStatus","setXmlApiStatus","uploading","setUploading","productList","state","loading","products","error","totalItems","page","setPage","totalPerPage","setTotalPerPage","searchKeyword","setSearchKeyword","marked","setMarked","categories","diameters","manufacturers","heights","widths","seasons","categoryList","productSave","loadingSave","success","successSave","errorSave","productDelete","loadingDelete","successDelete","errorDelete","dispatch","openModal","product","_id","Sifra","Naziv","Cena","Specifikacija","Slika","Proizvodjac","Kategorija","Lager","Sezona","Sirina","Visina","Precnik","Istaknut","submitSearchHandler","e","preventDefault","submitHandler","handlePagination","num","deleteHandler","uploadFileHandler","file","target","files","bodyFormData","FormData","append","post","headers","then","response","data","catch","err","console","log","uploadXmlFileHandler","message","status","closeEl","document","querySelector","setTimeout","click","finally","onChangeValue","value","map","item"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport axios from 'axios';\nimport {\n    saveProduct,\n    listProducts,\n    deleteProdcut,\n} from '../actions/productActions';\nimport Pagination from \"react-js-pagination\";\nimport {listCategories} from \"../actions/categoryAction\";\n\nfunction ProductsScreen(props) {\n    const [modalVisible, setModalVisible] = useState(false);\n    const [id, setId] = useState('');\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState('');\n    const [image, setImage] = useState('');\n    const [brand, setBrand] = useState('');\n    const [category, setCategory] = useState('');\n    const [countInStock, setCountInStock] = useState('');\n    const [description, setDescription] = useState('');\n    const [width, setWidth] = useState('');\n    const [height, setHeight] = useState('');\n    const [diameter, setDiameter] = useState('');\n    const [season, setSeason] = useState('');\n    const [manufacturer, setManufacturer] = useState('');\n    const [key, setKey] = useState('');\n    const [xmlApiMsg, setXmlApiMsg] = useState('');\n    const [xmlApiStatus, setXmlApiStatus] = useState('');\n    const [uploading, setUploading] = useState(false);\n    const productList = useSelector((state) => state.productList);\n    const {loading, products, error, totalItems} = productList;\n    const [page, setPage] = useState(1);\n    const [totalPerPage, setTotalPerPage] = useState(32);\n    const [searchKeyword, setSearchKeyword] = useState('');\n    const [marked, setMarked] = useState('0');\n    const {categories, diameters, manufacturers, heights, widths, seasons} = useSelector((state) => state.categoryList.categories);\n\n\n    const productSave = useSelector((state) => state.productSave);\n    const {\n        loading: loadingSave,\n        success: successSave,\n        error: errorSave,\n    } = productSave;\n\n    const productDelete = useSelector((state) => state.productDelete);\n    const {\n        loading: loadingDelete,\n        success: successDelete,\n        error: errorDelete,\n    } = productDelete;\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (successSave) {\n            setModalVisible(false);\n        }\n        dispatch(listProducts('', searchKeyword, '', 1));\n        dispatch(listCategories())\n        return () => {\n            //\n        };\n    }, [successSave, successDelete]);\n\n    const openModal = (product) => {\n        // setModalVisible(true);\n        setId(product._id || '');\n        setKey(product.Sifra || '');\n        setName(product.Naziv || '');\n        setPrice(product.Cena || '');\n        setDescription(product.Specifikacija || '');\n        setImage(product.Slika || '');\n        setManufacturer(product.Proizvodjac || '');\n        setCategory(product.Kategorija || '');\n        setCountInStock(product.Lager || '');\n        setSeason(product.Sezona || '');\n        setWidth(product.Sirina || '');\n        setHeight(product.Visina || '');\n        setDiameter(product.Precnik || '');\n        setMarked(product.Istaknut);\n    };\n    const submitSearchHandler = (e) => {\n        e.preventDefault();\n        setPage(1);\n        dispatch(listProducts('', searchKeyword, '', 1));\n    };\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(\n            saveProduct({\n                _id: id,\n                manufacturer,\n                width,\n                height,\n                diameter,\n                season,\n                key,\n                name,\n                price,\n                image,\n                brand,\n                category,\n                countInStock: countInStock || 0,\n                description,\n                marked,\n            })\n        );\n    };\n    const handlePagination = (num) => {\n        setPage(num);\n        dispatch(listProducts('', searchKeyword, '', num));\n    };\n    const deleteHandler = (product) => {\n        dispatch(deleteProdcut(product._id));\n    };\n    const uploadFileHandler = (e) => {\n        const file = e.target.files[0];\n        const bodyFormData = new FormData();\n        bodyFormData.append('image', file);\n        setUploading(true);\n        axios\n            .post('/api/uploads', bodyFormData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            })\n            .then((response) => {\n                setImage(response.data);\n                setUploading(false);\n            })\n            .catch((err) => {\n                console.log(err);\n                setUploading(false);\n            });\n    };\n    const uploadXmlFileHandler = (e) => {\n        const file = e.target.files[0];\n        const bodyFormData = new FormData();\n        bodyFormData.append('xml', file);\n        setUploading(true);\n        axios\n            .post('/api/xml', bodyFormData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            })\n            .then((response) => {\n                setXmlApiMsg(response.data.message);\n                setXmlApiStatus(response.status);\n                setUploading(false);\n                var closeEl = document.querySelector('.-xml-close');\n                setTimeout(() => {\n                    dispatch(listProducts('', searchKeyword, '', page));\n                    closeEl.click();\n                }, 3000)\n            })\n            .catch((err) => {\n                setXmlApiMsg(err.response.data.message);\n                setXmlApiStatus(err.response.status);\n                console.log('error on XML upload', err.response);\n                setUploading(false);\n            }).finally(() => {\n\n        });\n    };\n    const onChangeValue = (e) => {\n        setMarked(e.target.value)\n    };\n    return (\n        <div className=\"content content-margined\">\n            <div className=\"product-header mb-4\">\n                <h2>Proizovdi</h2>\n                <div>\n                    <form className={'d-inline-block'} onSubmit={submitSearchHandler}>\n                        <input\n                            name=\"searchKeyword\"\n                            onChange={(e) => setSearchKeyword(e.target.value)}\n                        />\n                        <button type=\"submit\">Search</button>\n                    </form>\n                    <button type=\"button\" className=\"btn btn-primary mx-5\" data-toggle=\"modal\" data-target=\"#exampleModal\" onClick={() => openModal({})}>\n                        Kreiraj proizovd\n                    </button>\n                    <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal1\">\n                        Ubaci XML\n                    </button>\n                </div>\n\n            </div>\n\n            <div className=\"modal fade bd-example-modal-lg\" id=\"exampleModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h2 className=\"modal-title\" id=\"exampleModalLabel\">{id ? 'Izmeni' : 'Kreiraj'} proizvod</h2>\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <div className=\"form-modal\">\n                                <form onSubmit={submitHandler}>\n                                    <div className=\"row\">\n                                        <div className=\"col-md-6\">\n                                            <label htmlFor=\"name\">Sifra</label>\n                                            <input\n                                                type=\"text\"\n                                                name=\"name\"\n                                                value={key}\n                                                id=\"name\"\n                                                onChange={(e) => setKey(e.target.value)}\n                                            ></input>\n                                            <label htmlFor=\"name\">Ime</label>\n                                            <input\n                                                type=\"text\"\n                                                name=\"name\"\n                                                value={name}\n                                                id=\"name\"\n                                                onChange={(e) => setName(e.target.value)}\n                                            ></input>\n                                            <label htmlFor=\"price\">Cena</label>\n                                            <input\n                                                type=\"text\"\n                                                name=\"price\"\n                                                value={price}\n                                                id=\"price\"\n                                                onChange={(e) => setPrice(e.target.value)}\n                                            ></input>\n                                            <label htmlFor=\"image\">Slika</label>\n                                            <input\n                                                type=\"text\"\n                                                name=\"image\"\n                                                value={image}\n                                                id=\"image\"\n                                                onChange={(e) => setImage(e.target.value)}\n                                            ></input>\n                                            <input type=\"file\"\n                                                   className=\"w-100\"\n                                                   onChange={uploadFileHandler}></input>\n                                            {uploading && <div>Uploading...</div>}\n                                            <label htmlFor=\"category\">Kategorija</label>\n                                            <select name=\"category\" value={category} onChange={e => setCategory(e.target.value)}>\n                                                <option value=\"\"></option>\n                                                {categories?.map(item => {\n                                                    return <option value={item.name} key={item.name}>{item.name}</option>\n                                                })}\n                                            </select>\n                                            {/*<input*/}\n                                            {/*    type=\"text\"*/}\n                                            {/*    name=\"brand\"*/}\n                                            {/*    value={category}*/}\n                                            {/*    id=\"brand\"*/}\n                                            {/*    onChange={(e) => setCategory(e.target.value)}*/}\n                                            {/*></input>*/}\n\n                                            <label htmlFor=\"manufacturer\">Proizvodjac</label>\n                                            <select name=\"manufacturer\" value={manufacturer} onChange={e => setManufacturer(e.target.value)}>\n                                                <option value=\"\"></option>\n                                                {manufacturers?.map(item => {\n                                                    return <option value={item.name} key={item.name}>{item.name}</option>\n                                                })}\n                                            </select>\n                                            {/*<input*/}\n                                            {/*    type=\"text\"*/}\n                                            {/*    name=\"brand\"*/}\n                                            {/*    value={manufacturer}*/}\n                                            {/*    id=\"brand\"*/}\n                                            {/*    onChange={(e) => setManufacturer(e.target.value)}*/}\n                                            {/*></input>*/}\n                                        </div>\n                                        <div className=\"col-md-6\">\n\n                                            <label htmlFor=\"width\">Sirina</label>\n                                            <select name=\"width\" value={width} onChange={e => setWidth(e.target.value)}>\n                                                <option value=\"\"></option>\n                                                {widths?.map(item => {\n                                                    return <option value={item.name} key={item.name}>{item.name}</option>\n                                                })}\n                                            </select>\n                                            {/*<input*/}\n                                            {/*    type=\"text\"*/}\n                                            {/*    name=\"countInStock\"*/}\n                                            {/*    value={width}*/}\n                                            {/*    id=\"countInStock\"*/}\n                                            {/*    onChange={(e) => setWidth(e.target.value)}*/}\n                                            {/*></input>*/}\n                                            <label htmlFor=\"countInStock\">Visina</label>\n                                            <select name=\"countInStock\" value={height} onChange={e => setHeight(e.target.value)}>\n                                                <option value=\"\"></option>\n                                                {heights?.map(item => {\n                                                    return <option value={item.name} key={item.name}>{item.name}</option>\n                                                })}\n                                            </select>\n                                            {/*<input*/}\n                                            {/*    type=\"text\"*/}\n                                            {/*    name=\"countInStock\"*/}\n                                            {/*    value={height}*/}\n                                            {/*    id=\"countInStock\"*/}\n                                            {/*    onChange={(e) => setHeight(e.target.value)}*/}\n                                            {/*></input>*/}\n                                            <label htmlFor=\"diameter\">Precnik</label>\n                                            <select name=\"diameter\" value={diameter} onChange={e => setDiameter(e.target.value)}>\n                                                <option value=\"\"></option>\n                                                {diameters?.map(item => {\n                                                    return <option value={item.name} key={item.name}>{item.name}</option>\n                                                })}\n                                            </select>\n                                            {/*<input*/}\n                                            {/*    type=\"text\"*/}\n                                            {/*    name=\"countInStock\"*/}\n                                            {/*    value={diameter}*/}\n                                            {/*    id=\"countInStock\"*/}\n                                            {/*    onChange={(e) => setDiameter(e.target.value)}*/}\n                                            {/*></input>*/}\n                                            <label htmlFor=\"countInStock\">Broj raspolozivih jedinica</label>\n                                            <input\n                                                type=\"text\"\n                                                name=\"countInStock\"\n                                                value={countInStock}\n                                                id=\"countInStock\"\n                                                onChange={(e) => setCountInStock(e.target.value)}\n                                            ></input>\n                                            <label htmlFor=\"season\">Sezona</label>\n                                            <select name=\"season\" value={season} onChange={e => setSeason(e.target.value)}>\n                                                <option value=\"\"></option>\n                                                {seasons?.map(item => {\n                                                    return <option value={item.name} key={item.name}>{item.name}</option>\n                                                })}\n                                            </select>\n                                            {/*<input*/}\n                                            {/*    type=\"text\"*/}\n                                            {/*    name=\"category\"*/}\n                                            {/*    value={season}*/}\n                                            {/*    id=\"category\"*/}\n                                            {/*    onChange={(e) => setSeason(e.target.value)}*/}\n                                            {/*></input>*/}\n                                            <label htmlFor=\"description\">Opis</label>\n                                            <textarea\n                                                name=\"description\"\n                                                value={description}\n                                                id=\"description\"\n                                                className=\"w-100\"\n                                                rows={6}\n                                                onChange={(e) => setDescription(e.target.value)}\n                                            ></textarea>\n\n                                            <div onChange={onChangeValue} className=\"marked-inputs\">\n                                                <label>Istaknut</label>\n                                                <input type=\"radio\" value=\"1\" name=\"gender\" checked={marked === '1'} /> Da\n                                                <input type=\"radio\" value=\"0\" name=\"gender\" checked={marked === '0'}/> Ne\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-secondary\" id=\"close-modal-btn\" data-dismiss=\"modal\">Odustani</button>\n                            <button type=\"submit\" className=\"btn btn-primary\" onClick={submitHandler}>\n                                {id ? 'Izmeni' : 'Kreiraj'}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"modal fade bd-example-modal-lg\" id=\"exampleModal1\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h2 className=\"modal-title\" id=\"exampleModalLabel\">Ubaci XML fajl</h2>\n                            <button type=\"button\" className=\"close -xml-close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <div className=\"form-modal\">\n                                <form onSubmit={submitHandler}>\n                                    <div className=\"row\">\n                                        <div className=\"col-md-12\">\n\n\n                                            <label htmlFor=\"image\">XML file</label>\n                                            <input type=\"file\"\n                                                   className=\"w-100\"\n                                                   onChange={uploadXmlFileHandler}/>\n                                            {uploading && <div>Uploading...</div>}\n                                        </div>\n                                        {xmlApiMsg && <div className=\"col-md-12 mt-3\">\n                                            <p className={xmlApiStatus > 250 ? 'error-text p-3' : 'success-text p-3'}>\n                                                STATUS ubacivanja XML fajla: {xmlApiMsg}\n                                            </p>\n                                        </div>}\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-secondary\" id=\"close-modal-btn\" data-dismiss=\"modal\">Zatvori</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {modalVisible && (\n                <div className=\"form\">\n                    <form onSubmit={submitHandler}>\n                        <ul className=\"form-container\">\n                            <li>\n                                <h2>Kreiraj Proizovd</h2>\n                            </li>\n                            <li>\n                                {loadingSave && <div>Loading...</div>}\n                                {errorSave && <div>{errorSave}</div>}\n                            </li>\n\n                            <li>\n                                <label htmlFor=\"name\">Ime</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"name\"\n                                    value={name}\n                                    id=\"name\"\n                                    onChange={(e) => setName(e.target.value)}\n                                ></input>\n                            </li>\n                            <li>\n                                <label htmlFor=\"price\">Cena</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"price\"\n                                    value={price}\n                                    id=\"price\"\n                                    onChange={(e) => setPrice(e.target.value)}\n                                ></input>\n                            </li>\n                            <li>\n                                <label htmlFor=\"image\">Slika</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"image\"\n                                    value={image}\n                                    id=\"image\"\n                                    onChange={(e) => setImage(e.target.value)}\n                                ></input>\n                                <input type=\"file\" onChange={uploadFileHandler}></input>\n                                {uploading && <div>Uploading...</div>}\n                            </li>\n                            <li>\n                                <label htmlFor=\"brand\">Brend</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"brand\"\n                                    value={brand}\n                                    id=\"brand\"\n                                    onChange={(e) => setBrand(e.target.value)}\n                                ></input>\n                            </li>\n                            <li>\n                                <label htmlFor=\"countInStock\">Broj raspolozivih jedinica</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"countInStock\"\n                                    value={countInStock}\n                                    id=\"countInStock\"\n                                    onChange={(e) => setCountInStock(e.target.value)}\n                                ></input>\n                            </li>\n                            <li>\n                                <label htmlFor=\"name\">Kategorija</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"category\"\n                                    value={category}\n                                    id=\"category\"\n                                    onChange={(e) => setCategory(e.target.value)}\n                                ></input>\n                            </li>\n                            <li>\n                                <label htmlFor=\"description\">Opis</label>\n                                <textarea\n                                    name=\"description\"\n                                    value={description}\n                                    id=\"description\"\n                                    onChange={(e) => setDescription(e.target.value)}\n                                ></textarea>\n                            </li>\n                            <li>\n                                <button type=\"submit\" className=\"button primary\">\n                                    {id ? 'Izmeni' : 'Kreiraj'}\n                                </button>\n                            </li>\n                            <li>\n                                <button\n                                    type=\"button\"\n                                    onClick={() => setModalVisible(false)}\n                                    className=\"button secondary\"\n                                >\n                                    Nazad\n                                </button>\n                            </li>\n                        </ul>\n                    </form>\n                </div>\n            )}\n\n            <div className=\"product-list\">\n                <table className=\"table\">\n                    <thead>\n                    <tr>\n                        <th>Sifra</th>\n                        <th>Ime</th>\n                        <th>Cena</th>\n                        <th>Kategorija</th>\n                        <th>Proizvodjac</th>\n                        <th></th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {products?.map((product) => (\n                        <tr key={product._id}>\n                            <td className=\"align-center\">{product.Sifra}</td>\n                            <td>{product.Naziv}</td>\n                            <td>{product.Cena}</td>\n                            <td>{product.Kategorija}</td>\n                            <td>{product.Proizvodjac}</td>\n                            <td>\n                                <button type=\"button\" data-toggle=\"modal\" data-target=\"#exampleModal\" className=\"button\" onClick={() => openModal(product)}>\n                                    Edit\n                                </button>\n                                {' '}\n                                <button\n                                    className=\"button\"\n                                    onClick={() => deleteHandler(product)}\n                                >\n                                    Delete\n                                </button>\n                            </td>\n                        </tr>\n                    ))}\n                    </tbody>\n                </table>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"pagination-wrapper\">\n                        {totalItems && <Pagination\n                            activePage={page}\n                            itemsCountPerPage={totalPerPage}\n                            totalItemsCount={totalItems}\n                            pageRangeDisplayed={5}\n                            onChange={handlePagination}\n                        />}\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ProductsScreen;\n"]},"metadata":{},"sourceType":"module"}