{"ast":null,"code":"var _jsxFileName = \"/Users/radosmijatovic/projects/novomak-export/frontend/src/screens/CartScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport { addToCart, removeFromCart } from '../actions/cartActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Axios from \"axios\";\nimport { CATEGORY_SAVE_FAIL, CATEGORY_SAVE_SUCCESS } from \"../constants/categoryConstants\";\nimport { listCategories } from \"../actions/categoryAction\";\n\nfunction CartScreen(props) {\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart;\n  const productId = props.match.params.id;\n  const qty = props.location.search ? Number(props.location.search.split(\"=\")[1]) : 1;\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [sureName, setSureName] = useState('');\n  const [address, setAddress] = useState('');\n  const [city, setCity] = useState('');\n  const [phone, setPhone] = useState('');\n  const [email, setEmail] = useState('');\n  const [note, setNote] = useState('');\n  const [formSubmitted, setFormSubmitted] = useState(false);\n  const [validForm, setValidForm] = useState(true);\n\n  const removeFromCartHandler = productId => {\n    dispatch(removeFromCart(productId));\n  };\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n\n    console.log(cartItems);\n  }, []);\n\n  const checkoutHandler = () => {\n    setFormSubmitted(true);\n\n    if (!name || !sureName || !email || !address || !city || !phone) {\n      setValidForm(false);\n      return 'validacija';\n    }\n\n    let orderBody = {};\n    Axios.post(`/api/orders/submit`, orderBody).then(data => {\n      console.log(data);\n    }).catch(error => {\n      console.log(error);\n    }).finally(() => {\n      console.log('finally order submitted');\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"cart-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Korpa\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"Cena\")), cartItems.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Korpa je prazna\") : cartItems.map((item, id) => /*#__PURE__*/React.createElement(\"li\", {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.Slika,\n    alt: \"product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-name mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/product/\" + item._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, item.Naziv)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }\n  }, \"Broj proizvoda:\", /*#__PURE__*/React.createElement(\"select\", {\n    className: \"mr-3 my-3\",\n    value: item.qty,\n    onChange: e => dispatch(addToCart(item.product, e.target.value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }\n  }, [...Array(item.Lager).keys()].map(x => /*#__PURE__*/React.createElement(\"option\", {\n    key: x + 1,\n    value: x + 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, x + 1))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"button\",\n    onClick: () => removeFromCartHandler(item._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, \"Izbrisi\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, item.Cena, \" rsd\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, \"Ukupno (\", cartItems.reduce((a, c) => a + c.qty, 0), \" proizvoda):\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, cartItems.reduce((a, c) => a + c.Cena * c.qty, 0).toFixed(2), \" rsd\")), formSubmitted && !validForm && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mt-5 error-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 39\n    }\n  }, \"Potrebno je popuniti sva polja kako biste narucili proizvod(e).\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Ime (obavezno)\",\n    type: \"text\",\n    name: \"name\",\n    value: name,\n    id: \"name\",\n    className: `${formSubmitted && !name ? 'not-valid' : ''}`,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Prezime (obavezno)\",\n    type: \"text\",\n    name: \"sureName\",\n    value: sureName,\n    id: \"sureName\",\n    className: `${formSubmitted && !sureName ? 'not-valid' : ''}`,\n    onChange: e => setSureName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Broj telefona (obavezno)\",\n    type: \"text\",\n    name: \"phone\",\n    value: phone,\n    id: \"phone\",\n    className: `${formSubmitted && !phone ? 'not-valid' : ''}`,\n    onChange: e => setPhone(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Adresa (obavezno)\",\n    type: \"text\",\n    name: \"address\",\n    value: address,\n    id: \"address\",\n    className: `${formSubmitted && !address ? 'not-valid' : ''}`,\n    onChange: e => setAddress(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Grad (obavezno)\",\n    type: \"text\",\n    name: \"city\",\n    value: city,\n    id: \"city\",\n    className: `${formSubmitted && !city ? 'not-valid' : ''}`,\n    onChange: e => setCity(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"E-mail (obavezno)\",\n    type: \"mail\",\n    name: \"email\",\n    value: email,\n    id: \"email\",\n    className: `${formSubmitted && !email ? 'not-valid' : ''}`,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, \"Napomena\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"note\",\n    value: note,\n    id: \"note\",\n    className: \"w-100\",\n    rows: 4,\n    onChange: e => setNote(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: checkoutHandler,\n    className: \"button primary full-width mt-5\",\n    disabled: cartItems.length === 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }, \"Odradi Kupovinu\")));\n}\n\nexport default CartScreen;","map":{"version":3,"sources":["/Users/radosmijatovic/projects/novomak-export/frontend/src/screens/CartScreen.js"],"names":["React","useEffect","useState","addToCart","removeFromCart","useDispatch","useSelector","Link","Axios","CATEGORY_SAVE_FAIL","CATEGORY_SAVE_SUCCESS","listCategories","CartScreen","props","cart","state","cartItems","productId","match","params","id","qty","location","search","Number","split","dispatch","name","setName","sureName","setSureName","address","setAddress","city","setCity","phone","setPhone","email","setEmail","note","setNote","formSubmitted","setFormSubmitted","validForm","setValidForm","removeFromCartHandler","console","log","checkoutHandler","orderBody","post","then","data","catch","error","finally","length","map","item","Slika","_id","Naziv","e","product","target","value","Array","Lager","keys","x","Cena","reduce","a","c","toFixed"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { addToCart, removeFromCart } from '../actions/cartActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Axios from \"axios\";\nimport {CATEGORY_SAVE_FAIL, CATEGORY_SAVE_SUCCESS} from \"../constants/categoryConstants\";\nimport {listCategories} from \"../actions/categoryAction\";\nfunction CartScreen(props) {\n\n  const cart = useSelector(state => state.cart);\n  const { cartItems } = cart;\n  const productId = props.match.params.id;\n  const qty = props.location.search ? Number(props.location.search.split(\"=\")[1]) : 1;\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [sureName, setSureName] = useState('');\n  const [address, setAddress] = useState('');\n  const [city, setCity] = useState('');\n  const [phone, setPhone] = useState('');\n  const [email, setEmail] = useState('');\n  const [note, setNote] = useState('');\n  const [formSubmitted, setFormSubmitted] = useState(false);\n  const [validForm, setValidForm] = useState(true);\n  const removeFromCartHandler = (productId) => {\n    dispatch(removeFromCart(productId));\n  }\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n    console.log(cartItems);\n  }, []);\n\n  const checkoutHandler = () => {\n    setFormSubmitted(true);\n    if (!name || !sureName || !email || !address || !city || !phone) {\n      setValidForm(false)\n      return 'validacija'\n    }\n    let orderBody = {};\n    Axios.post(`/api/orders/submit`, orderBody)\n        .then(data => {\n          console.log(data);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          console.log('finally order submitted');\n        });\n  };\n\n  return <div className=\"cart\">\n    <div className=\"cart-list\">\n      <ul className=\"cart-list-container\">\n        <li>\n          <h3>\n            Korpa\n          </h3>\n          <div>\n            Cena\n          </div>\n        </li>\n        {\n          cartItems.length === 0 ?\n            <div>\n              Korpa je prazna\n          </div>\n            :\n            cartItems.map((item, id) =>\n              <li key={id}>\n                <div className=\"cart-image\">\n                  <img src={item.Slika} alt=\"product\" />\n                </div>\n                <div className=\"cart-name mb-3\">\n                  <div>\n                    <Link to={\"/product/\" + item._id}>\n                      {item.Naziv}\n                    </Link>\n\n                  </div>\n                  <div>\n                    Broj proizvoda:\n                  <select className=\"mr-3 my-3\" value={item.qty} onChange={(e) => dispatch(addToCart(item.product, e.target.value))}>\n                      {[...Array(item.Lager).keys()].map(x =>\n                        <option key={x + 1} value={x + 1}>{x + 1}</option>\n                      )}\n                    </select>\n\n                    <button type=\"button\" className=\"button\" onClick={() => removeFromCartHandler(item._id)} >\n                      Izbrisi\n                    </button>\n                  </div>\n                </div>\n                <div className=\"cart-price\">\n                  {item.Cena} rsd\n                </div>\n              </li>\n            )\n        }\n      </ul>\n\n    </div>\n    <div className=\"cart-action\">\n      <h3>\n        Ukupno ({cartItems.reduce((a, c) => a + c.qty, 0)} proizvoda):\n        <span className=\"float-right\">\n          {cartItems.reduce((a, c) => a + c.Cena * c.qty, 0).toFixed(2)} rsd\n        </span>\n      </h3>\n      {formSubmitted && !validForm && <p className=\"mt-5 error-text\">Potrebno je popuniti sva polja kako biste narucili proizvod(e).</p>}\n      <div className=\"form-modal\">\n          {/*<label htmlFor=\"name\">Ime</label>*/}\n          <input\n              placeholder=\"Ime (obavezno)\"\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              id=\"name\"\n              className={`${formSubmitted && !name ? 'not-valid' : ''}`}\n              onChange={(e) => setName(e.target.value)}\n          />\n          {/*<label htmlFor=\"sureName\">Prezime</label>*/}\n          <input\n              placeholder=\"Prezime (obavezno)\"\n              type=\"text\"\n              name=\"sureName\"\n              value={sureName}\n              id=\"sureName\"\n              className={`${formSubmitted && !sureName ? 'not-valid' : ''}`}\n              onChange={(e) => setSureName(e.target.value)}\n          />\n        {/*<label htmlFor=\"phone\">Broj telefona</label>*/}\n        <input\n            placeholder=\"Broj telefona (obavezno)\"\n            type=\"text\"\n            name=\"phone\"\n            value={phone}\n            id=\"phone\"\n            className={`${formSubmitted && !phone ? 'not-valid' : ''}`}\n            onChange={(e) => setPhone(e.target.value)}\n        />\n          {/*<label htmlFor=\"address\">Adresa</label>*/}\n          <input\n              placeholder=\"Adresa (obavezno)\"\n              type=\"text\"\n              name=\"address\"\n              value={address}\n              id=\"address\"\n              className={`${formSubmitted && !address ? 'not-valid' : ''}`}\n              onChange={(e) => setAddress(e.target.value)}\n          />\n          {/*<label htmlFor=\"city\">Grad</label>*/}\n          <input\n              placeholder=\"Grad (obavezno)\"\n              type=\"text\"\n              name=\"city\"\n              value={city}\n              id=\"city\"\n              className={`${formSubmitted && !city ? 'not-valid' : ''}`}\n              onChange={(e) => setCity(e.target.value)}\n          />\n          {/*<label htmlFor=\"email\">E mail</label>*/}\n          <input\n              placeholder=\"E-mail (obavezno)\"\n              type=\"mail\"\n              name=\"email\"\n              value={email}\n              id=\"email\"\n              className={`${formSubmitted && !email ? 'not-valid' : ''}`}\n              onChange={(e) => setEmail(e.target.value)}\n          />\n        <label htmlFor=\"note\">Napomena</label>\n        <textarea\n            name=\"note\"\n            value={note}\n            id=\"note\"\n            className=\"w-100\"\n            rows={4}\n            onChange={(e) => setNote(e.target.value)}\n        ></textarea>\n\n      </div>\n      <button onClick={checkoutHandler} className=\"button primary full-width mt-5\" disabled={cartItems.length === 0}>\n        Odradi Kupovinu\n      </button>\n\n    </div>\n\n  </div>\n}\n\nexport default CartScreen;"]},"metadata":{},"sourceType":"module"}