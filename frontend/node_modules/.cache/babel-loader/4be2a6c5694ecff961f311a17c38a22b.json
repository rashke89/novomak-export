{"ast":null,"code":"import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS, PRODUCT_SAVE_FAIL, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_REVIEW_SAVE_REQUEST, PRODUCT_REVIEW_SAVE_FAIL, PRODUCT_REVIEW_SAVE_SUCCESS, PRODUCT_FILTER_UPDATE } from '../constants/productConstants';\nimport axios from 'axios';\nimport Axios from 'axios';\n\nconst listProducts = (category = '', searchKeyword = '', sortOrder = '', page = 1, filter = {}) => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(`/api/products?searchKeyword=${searchKeyword}&sortOrder=${sortOrder}&page=${page}`, { ...filter\n    });\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst randomProducts = () => async dispatch => {\n  console.log('jel radi ovo');\n\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/products/random`);\n    console.log(data);\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_SAVE_REQUEST,\n      payload: product\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n\n    if (!product._id) {\n      const {\n        data\n      } = await Axios.post('/api/products/new', product, {\n        headers: {\n          Authorization: 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    } else {\n      const {\n        data\n      } = await Axios.put('/api/products/' + product._id, product, {\n        headers: {\n          Authorization: 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get('/api/products/' + productId);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst deleteProdcut = productId => async (dispatch, getState) => {\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.delete('/api/products/' + productId, {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n      payload: data,\n      success: true\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveProductReview = (productId, review) => async (dispatch, getState) => {\n  try {\n    const {\n      userSignin: {\n        userInfo: {\n          token\n        }\n      }\n    } = getState();\n    dispatch({\n      type: PRODUCT_REVIEW_SAVE_REQUEST,\n      payload: review\n    });\n    const {\n      data\n    } = await axios.post(`/api/products/${productId}/reviews`, review, {\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    });\n    dispatch({\n      type: PRODUCT_REVIEW_SAVE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    // report error\n    dispatch({\n      type: PRODUCT_REVIEW_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst updateFilter = filter => dispatch => dispatch({\n  type: PRODUCT_FILTER_UPDATE,\n  payload: filter\n});\n\nexport { listProducts, detailsProduct, saveProduct, deleteProdcut, saveProductReview, updateFilter, randomProducts };","map":{"version":3,"sources":["/Users/radosmijatovic/projects/novomak-export/frontend/src/actions/productActions.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_SAVE_REQUEST","PRODUCT_SAVE_SUCCESS","PRODUCT_SAVE_FAIL","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_REVIEW_SAVE_REQUEST","PRODUCT_REVIEW_SAVE_FAIL","PRODUCT_REVIEW_SAVE_SUCCESS","PRODUCT_FILTER_UPDATE","axios","Axios","listProducts","category","searchKeyword","sortOrder","page","filter","dispatch","type","data","post","payload","error","message","randomProducts","console","log","get","saveProduct","product","getState","userSignin","userInfo","_id","headers","Authorization","token","put","detailsProduct","productId","deleteProdcut","delete","success","saveProductReview","review","updateFilter"],"mappings":"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","sourcesContent":["import {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_SAVE_REQUEST,\n    PRODUCT_SAVE_SUCCESS,\n    PRODUCT_SAVE_FAIL,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_REVIEW_SAVE_REQUEST,\n    PRODUCT_REVIEW_SAVE_FAIL,\n    PRODUCT_REVIEW_SAVE_SUCCESS, PRODUCT_FILTER_UPDATE,\n} from '../constants/productConstants';\nimport axios from 'axios';\nimport Axios from 'axios';\n\nconst listProducts = (\n    category = '',\n    searchKeyword = '',\n    sortOrder = '',\n    page = 1,\n    filter = {}\n) => async (dispatch) => {\n    try {\n        dispatch({type: PRODUCT_LIST_REQUEST});\n        const {data} = await axios.post(\n            `/api/products?searchKeyword=${searchKeyword}&sortOrder=${sortOrder}&page=${page}`, {\n                ...filter\n            }\n        );\n        dispatch({type: PRODUCT_LIST_SUCCESS, payload: data});\n    } catch (error) {\n        dispatch({type: PRODUCT_LIST_FAIL, payload: error.message});\n    }\n};\nconst randomProducts = () => async (dispatch) => {\n    console.log('jel radi ovo');\n    try {\n        dispatch({type: PRODUCT_LIST_REQUEST});\n        const {data} = await axios.get(\n            `/api/products/random`,);\n        console.log(data);\n        dispatch({type: PRODUCT_LIST_SUCCESS, payload: data});\n    } catch (error) {\n        dispatch({type: PRODUCT_LIST_FAIL, payload: error.message});\n    }\n};\n\nconst saveProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({type: PRODUCT_SAVE_REQUEST, payload: product});\n        const {\n            userSignin: {userInfo},\n        } = getState();\n        if (!product._id) {\n            const {data} = await Axios.post('/api/products/new', product, {\n                headers: {\n                    Authorization: 'Bearer ' + userInfo.token,\n                },\n            });\n            dispatch({type: PRODUCT_SAVE_SUCCESS, payload: data});\n        } else {\n            const {data} = await Axios.put(\n                '/api/products/' + product._id,\n                product,\n                {\n                    headers: {\n                        Authorization: 'Bearer ' + userInfo.token,\n                    },\n                }\n            );\n            dispatch({type: PRODUCT_SAVE_SUCCESS, payload: data});\n        }\n    } catch (error) {\n        dispatch({type: PRODUCT_SAVE_FAIL, payload: error.message});\n    }\n};\n\nconst detailsProduct = (productId) => async (dispatch) => {\n    try {\n        dispatch({type: PRODUCT_DETAILS_REQUEST, payload: productId});\n        const {data} = await axios.get('/api/products/' + productId);\n        dispatch({type: PRODUCT_DETAILS_SUCCESS, payload: data});\n    } catch (error) {\n        dispatch({type: PRODUCT_DETAILS_FAIL, payload: error.message});\n    }\n};\n\nconst deleteProdcut = (productId) => async (dispatch, getState) => {\n    try {\n        const {\n            userSignin: {userInfo},\n        } = getState();\n        dispatch({type: PRODUCT_DELETE_REQUEST, payload: productId});\n        const {data} = await axios.delete('/api/products/' + productId, {\n            headers: {\n                Authorization: 'Bearer ' + userInfo.token,\n            },\n        });\n        dispatch({type: PRODUCT_DELETE_SUCCESS, payload: data, success: true});\n    } catch (error) {\n        dispatch({type: PRODUCT_DELETE_FAIL, payload: error.message});\n    }\n};\n\nconst saveProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        const {\n            userSignin: {\n                userInfo: {token},\n            },\n        } = getState();\n        dispatch({type: PRODUCT_REVIEW_SAVE_REQUEST, payload: review});\n        const {data} = await axios.post(\n            `/api/products/${productId}/reviews`,\n            review,\n            {\n                headers: {\n                    Authorization: 'Bearer ' + token,\n                },\n            }\n        );\n        dispatch({type: PRODUCT_REVIEW_SAVE_SUCCESS, payload: data});\n    } catch (error) {\n        // report error\n        dispatch({type: PRODUCT_REVIEW_SAVE_FAIL, payload: error.message});\n    }\n};\n\nconst updateFilter = (filter) => (dispatch) => dispatch({type: PRODUCT_FILTER_UPDATE, payload: filter});\n\nexport {\n    listProducts,\n    detailsProduct,\n    saveProduct,\n    deleteProdcut,\n    saveProductReview,\n    updateFilter,\n    randomProducts\n};\n"]},"metadata":{},"sourceType":"module"}