{"ast":null,"code":"var _jsxFileName = \"/Users/radosmijatovic/projects/novomak-export/frontend/src/screens/CartScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport { addToCart, removeFromCart } from '../actions/cartActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nfunction CartScreen(props) {\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart;\n  const productId = props.match.params.id;\n  const qty = props.location.search ? Number(props.location.search.split(\"=\")[1]) : 1;\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [sureName, setSureName] = useState('');\n\n  const removeFromCartHandler = productId => {\n    dispatch(removeFromCart(productId));\n  };\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n\n    console.log(cartItems);\n  }, []);\n\n  const checkoutHandler = () => {\n    return null;\n    props.history.push(\"/signin?redirect=shipping\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"cart-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Korpa\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Cena\")), cartItems.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Korpa je prazna\") : cartItems.map((item, id) => /*#__PURE__*/React.createElement(\"li\", {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.Slika,\n    alt: \"product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-name mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/product/\" + item._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, item.Naziv)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }\n  }, \"Broj proizvoda:\", /*#__PURE__*/React.createElement(\"select\", {\n    value: item.qty,\n    onChange: e => dispatch(addToCart(item.product, e.target.value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }\n  }, [...Array(item.Lager).keys()].map(x => /*#__PURE__*/React.createElement(\"option\", {\n    key: x + 1,\n    value: x + 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }, x + 1))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"button\",\n    onClick: () => removeFromCartHandler(item._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, \"Izbrisi\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, item.Cena, \" rsd\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"Ukupno (\", cartItems.reduce((a, c) => a + c.qty, 0), \" proizvoda):\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, cartItems.reduce((a, c) => a + c.Cena * c.qty, 0).toFixed(2), \" rsd\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Ime\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: name,\n    id: \"name\",\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Prezime\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: sureName,\n    id: \"name\",\n    onChange: e => setSureName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: checkoutHandler,\n    className: \"button primary full-width mt-5\",\n    disabled: cartItems.length === 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, \"Odradi Kupovinu\")));\n}\n\nexport default CartScreen;","map":{"version":3,"sources":["/Users/radosmijatovic/projects/novomak-export/frontend/src/screens/CartScreen.js"],"names":["React","useEffect","useState","addToCart","removeFromCart","useDispatch","useSelector","Link","CartScreen","props","cart","state","cartItems","productId","match","params","id","qty","location","search","Number","split","dispatch","name","setName","sureName","setSureName","removeFromCartHandler","console","log","checkoutHandler","history","push","length","map","item","Slika","_id","Naziv","e","product","target","value","Array","Lager","keys","x","Cena","reduce","a","c","toFixed"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { addToCart, removeFromCart } from '../actions/cartActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nfunction CartScreen(props) {\n\n  const cart = useSelector(state => state.cart);\n  const { cartItems } = cart;\n  const productId = props.match.params.id;\n  const qty = props.location.search ? Number(props.location.search.split(\"=\")[1]) : 1;\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [sureName, setSureName] = useState('');\n  const removeFromCartHandler = (productId) => {\n    dispatch(removeFromCart(productId));\n  }\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n    console.log(cartItems);\n  }, []);\n\n  const checkoutHandler = () => {\n    return null;\n    props.history.push(\"/signin?redirect=shipping\");\n  }\n\n  return <div className=\"cart\">\n    <div className=\"cart-list\">\n      <ul className=\"cart-list-container\">\n        <li>\n          <h3>\n            Korpa\n          </h3>\n          <div>\n            Cena\n          </div>\n        </li>\n        {\n          cartItems.length === 0 ?\n            <div>\n              Korpa je prazna\n          </div>\n            :\n            cartItems.map((item, id) =>\n              <li key={id}>\n                <div className=\"cart-image\">\n                  <img src={item.Slika} alt=\"product\" />\n                </div>\n                <div className=\"cart-name mb-3\">\n                  <div>\n                    <Link to={\"/product/\" + item._id}>\n                      {item.Naziv}\n                    </Link>\n\n                  </div>\n                  <div>\n                    Broj proizvoda:\n                  <select value={item.qty} onChange={(e) => dispatch(addToCart(item.product, e.target.value))}>\n                      {[...Array(item.Lager).keys()].map(x =>\n                        <option key={x + 1} value={x + 1}>{x + 1}</option>\n                      )}\n                    </select>\n\n                    <button type=\"button\" className=\"button\" onClick={() => removeFromCartHandler(item._id)} >\n                      Izbrisi\n                    </button>\n                  </div>\n                </div>\n                <div className=\"cart-price\">\n                  {item.Cena} rsd\n                </div>\n              </li>\n            )\n        }\n      </ul>\n\n    </div>\n    <div className=\"cart-action\">\n      <h3>\n        Ukupno ({cartItems.reduce((a, c) => a + c.qty, 0)} proizvoda):\n        <span className=\"float-right\">\n          {cartItems.reduce((a, c) => a + c.Cena * c.qty, 0).toFixed(2)} rsd\n        </span>\n      </h3>\n      <div className=\"form-modal\">\n          <label htmlFor=\"name\">Ime</label>\n          <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              id=\"name\"\n              onChange={(e) => setName(e.target.value)}\n          />\n          <label htmlFor=\"name\">Prezime</label>\n          <input\n              type=\"text\"\n              name=\"name\"\n              value={sureName}\n              id=\"name\"\n              onChange={(e) => setSureName(e.target.value)}\n          />\n          {/*<label htmlFor=\"brand\">Rabat (%)</label>*/}\n          {/*<input*/}\n          {/*    type=\"number\"*/}\n          {/*    name=\"brand\"*/}\n          {/*    value={discount}*/}\n          {/*    id=\"brand\"*/}\n          {/*    onChange={(e) => setDiscount(e.target.value)}*/}\n          {/*></input>*/}\n\n\n      </div>\n      <button onClick={checkoutHandler} className=\"button primary full-width mt-5\" disabled={cartItems.length === 0}>\n        Odradi Kupovinu\n      </button>\n\n    </div>\n\n  </div>\n}\n\nexport default CartScreen;"]},"metadata":{},"sourceType":"module"}