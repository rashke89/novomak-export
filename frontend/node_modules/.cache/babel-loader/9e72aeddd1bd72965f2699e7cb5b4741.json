{"ast":null,"code":"var _jsxFileName = \"/Users/radosmijatovic/projects/novomak-export/frontend/src/screens/ProductsScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { saveProduct, listProducts, deleteProdcut } from '../actions/productActions';\nimport Pagination from \"react-js-pagination\";\n\nfunction ProductsScreen(props) {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [id, setId] = useState('');\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState('');\n  const [image, setImage] = useState('');\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState('');\n  const [description, setDescription] = useState('');\n  const [width, setWidth] = useState('');\n  const [height, setHeight] = useState('');\n  const [diameter, setDiameter] = useState('');\n  const [season, setSeason] = useState('');\n  const [manufacturer, setManufacturer] = useState('');\n  const [key, setKey] = useState('');\n  const [xmlApiMsg, setXmlApiMsg] = useState('');\n  const [xmlApiStatus, setXmlApiStatus] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const productList = useSelector(state => state.productList);\n  const {\n    loading,\n    products,\n    error\n  } = productList;\n  const [page, setPage] = useState(1);\n  const [totalPerPage, setTotalPerPage] = useState(30);\n  const productSave = useSelector(state => state.productSave);\n  const {\n    loading: loadingSave,\n    success: successSave,\n    error: errorSave\n  } = productSave;\n  const productDelete = useSelector(state => state.productDelete);\n  const {\n    loading: loadingDelete,\n    success: successDelete,\n    error: errorDelete\n  } = productDelete;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (successSave) {\n      setModalVisible(false);\n    }\n\n    dispatch(listProducts('', '', '', 1));\n    return () => {//\n    };\n  }, [successSave, successDelete]);\n\n  const openModal = product => {\n    // setModalVisible(true);\n    setId(product._id || '');\n    setKey(product.Sifra || '');\n    setName(product.Naziv || '');\n    setPrice(product.Cena || '');\n    setDescription(product.Specifikacija || '');\n    setImage(product.Slika || '');\n    setManufacturer(product.Proizvodjac || '');\n    setCategory(product.Kategorija || '');\n    setCountInStock(product.Lager || '');\n    setSeason(product.Sezona || '');\n    setWidth(product.Sirina || '');\n    setHeight(product.Visina || '');\n    setDiameter(product.Precnik || '');\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(saveProduct({\n      _id: id,\n      manufacturer,\n      width,\n      height,\n      diameter,\n      season,\n      key,\n      name,\n      price,\n      image,\n      brand,\n      category,\n      countInStock,\n      description\n    }));\n  };\n\n  const handlePagination = num => {\n    console.log(num);\n    setPage(num);\n    dispatch(listProducts('', '', '', num));\n  };\n\n  const deleteHandler = product => {\n    dispatch(deleteProdcut(product._id));\n  };\n\n  const uploadFileHandler = e => {\n    const file = e.target.files[0];\n    const bodyFormData = new FormData();\n    bodyFormData.append('image', file);\n    console.log(bodyFormData);\n    setUploading(true);\n    axios.post('/api/uploads', bodyFormData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      setImage(response.data);\n      setUploading(false);\n    }).catch(err => {\n      console.log(err);\n      setUploading(false);\n    });\n  };\n\n  const uploadXmlFileHandler = e => {\n    const file = e.target.files[0];\n    const bodyFormData = new FormData();\n    bodyFormData.append('xml', file);\n    setUploading(true);\n    axios.post('/api/xml', bodyFormData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      setXmlApiMsg(response.data.message);\n      setXmlApiStatus(response.status);\n      setUploading(false);\n      var closeEl = document.querySelector('.-xml-close');\n      setTimeout(() => {\n        dispatch(listProducts());\n        closeEl.click();\n      }, 3000);\n    }).catch(err => {\n      setXmlApiMsg(err.response.data.message);\n      setXmlApiStatus(err.response.status);\n      console.log('error on XML upload', err.response);\n      setUploading(false);\n    }).finally(() => {});\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content content-margined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-header mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, \"Proizovdi\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary mx-3\",\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#exampleModal\",\n    onClick: () => openModal({}),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 21\n    }\n  }, \"Kreiraj proizovd\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#exampleModal1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }, \"Ubaci XML\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal fade bd-example-modal-lg\",\n    id: \"exampleModal\",\n    tabIndex: \"-1\",\n    role: \"dialog\",\n    \"aria-labelledby\": \"exampleModalLabel\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-dialog\",\n    role: \"document\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"modal-title\",\n    id: \"exampleModalLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 29\n    }\n  }, \"Kreiraj proizvod\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"close\",\n    \"data-dismiss\": \"modal\",\n    \"aria-label\": \"Close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 33\n    }\n  }, \"\\xD7\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 45\n    }\n  }, \"Sifra\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: key,\n    id: \"name\",\n    onChange: e => setKey(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 45\n    }\n  }, \"Ime\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: name,\n    id: \"name\",\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 45\n    }\n  }, \"Cena\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"price\",\n    value: price,\n    id: \"price\",\n    onChange: e => setPrice(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 45\n    }\n  }, \"Slika\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"image\",\n    value: image,\n    id: \"image\",\n    onChange: e => setImage(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"w-100\",\n    onChange: uploadFileHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 45\n    }\n  }), uploading && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 59\n    }\n  }, \"Uploading...\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"brand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 45\n    }\n  }, \"Kategorija\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"brand\",\n    value: category,\n    id: \"brand\",\n    onChange: e => setCategory(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"brand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 45\n    }\n  }, \"Proizvodjac\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"brand\",\n    value: manufacturer,\n    id: \"brand\",\n    onChange: e => setManufacturer(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"countInStock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 45\n    }\n  }, \"Sirina\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"countInStock\",\n    value: width,\n    id: \"countInStock\",\n    onChange: e => setWidth(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"countInStock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 45\n    }\n  }, \"Visina\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"countInStock\",\n    value: height,\n    id: \"countInStock\",\n    onChange: e => setHeight(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"countInStock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 45\n    }\n  }, \"Precnik\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"countInStock\",\n    value: diameter,\n    id: \"countInStock\",\n    onChange: e => setDiameter(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"countInStock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 45\n    }\n  }, \"Broj raspolozivih jedinica\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"countInStock\",\n    value: countInStock,\n    id: \"countInStock\",\n    onChange: e => setCountInStock(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 45\n    }\n  }, \"Sezona\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"category\",\n    value: season,\n    id: \"category\",\n    onChange: e => setSeason(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 45\n    }\n  }, \"Opis\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"description\",\n    value: description,\n    id: \"description\",\n    className: \"w-100\",\n    rows: 6,\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 45\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    id: \"close-modal-btn\",\n    \"data-dismiss\": \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 29\n    }\n  }, \"Odustani\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    onClick: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 29\n    }\n  }, id ? 'Izmeni' : 'Kreiraj'))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal fade bd-example-modal-lg\",\n    id: \"exampleModal1\",\n    tabIndex: \"-1\",\n    role: \"dialog\",\n    \"aria-labelledby\": \"exampleModalLabel\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-dialog\",\n    role: \"document\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"modal-title\",\n    id: \"exampleModalLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 29\n    }\n  }, \"Kreiraj kategoriju\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"close -xml-close\",\n    \"data-dismiss\": \"modal\",\n    \"aria-label\": \"Close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 33\n    }\n  }, \"\\xD7\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 45\n    }\n  }, \"XML file\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"w-100\",\n    onChange: uploadXmlFileHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 45\n    }\n  }), uploading && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 59\n    }\n  }, \"Uploading...\")), xmlApiMsg && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 text-white mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 55\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: xmlApiStatus > 250 ? 'bg-danger p-3' : 'bg-success p-3',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 45\n    }\n  }, \"STATUS ubacivanja XML fajla: \", xmlApiMsg)))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    id: \"close-modal-btn\",\n    \"data-dismiss\": \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 29\n    }\n  }, \"Zatvori\"))))), modalVisible && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 33\n    }\n  }, \"Kreiraj Proizovd\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 29\n    }\n  }, loadingSave && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 49\n    }\n  }, \"Loading...\"), errorSave && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 47\n    }\n  }, errorSave)), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 33\n    }\n  }, \"Ime\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: name,\n    id: \"name\",\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 33\n    }\n  }, \"Cena\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"price\",\n    value: price,\n    id: \"price\",\n    onChange: e => setPrice(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 33\n    }\n  }, \"Slika\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"image\",\n    value: image,\n    id: \"image\",\n    onChange: e => setImage(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: uploadFileHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 33\n    }\n  }), uploading && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 47\n    }\n  }, \"Uploading...\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"brand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 33\n    }\n  }, \"Brend\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"brand\",\n    value: brand,\n    id: \"brand\",\n    onChange: e => setBrand(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"countInStock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 33\n    }\n  }, \"Broj raspolozivih jedinica\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"countInStock\",\n    value: countInStock,\n    id: \"countInStock\",\n    onChange: e => setCountInStock(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 33\n    }\n  }, \"Kategorija\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"category\",\n    value: category,\n    id: \"category\",\n    onChange: e => setCategory(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 33\n    }\n  }, \"Opis\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"description\",\n    value: description,\n    id: \"description\",\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"button primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 33\n    }\n  }, id ? 'Izmeni' : 'Kreiraj')), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setModalVisible(false),\n    className: \"button secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 33\n    }\n  }, \"Nazad\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 25\n    }\n  }, \"Sifra\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 25\n    }\n  }, \"Ime\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 25\n    }\n  }, \"Cena\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 25\n    }\n  }, \"Kategorija\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 25\n    }\n  }, \"Proizvodjac\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 21\n    }\n  }, products.map(product => /*#__PURE__*/React.createElement(\"tr\", {\n    key: product._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"align-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 29\n    }\n  }, product.Sifra), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 29\n    }\n  }, product.Naziv), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 29\n    }\n  }, product.Cena), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 29\n    }\n  }, product.Kategorija), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 29\n    }\n  }, product.Proizvodjac), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#exampleModal\",\n    className: \"button\",\n    onClick: () => openModal(product),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 33\n    }\n  }, \"Edit\"), ' ', /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    onClick: () => deleteHandler(product),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 33\n    }\n  }, \"Delete\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pagination-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 21\n    }\n  }, totalItems && /*#__PURE__*/React.createElement(Pagination, {\n    activePage: page,\n    itemsCountPerPage: totalPerPage,\n    totalItemsCount: totalItems,\n    pageRangeDisplayed: 5,\n    onChange: handlePagination,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 40\n    }\n  })))));\n}\n\nexport default ProductsScreen;","map":{"version":3,"sources":["/Users/radosmijatovic/projects/novomak-export/frontend/src/screens/ProductsScreen.js"],"names":["React","useEffect","useState","useSelector","useDispatch","axios","saveProduct","listProducts","deleteProdcut","Pagination","ProductsScreen","props","modalVisible","setModalVisible","id","setId","name","setName","price","setPrice","image","setImage","brand","setBrand","category","setCategory","countInStock","setCountInStock","description","setDescription","width","setWidth","height","setHeight","diameter","setDiameter","season","setSeason","manufacturer","setManufacturer","key","setKey","xmlApiMsg","setXmlApiMsg","xmlApiStatus","setXmlApiStatus","uploading","setUploading","productList","state","loading","products","error","page","setPage","totalPerPage","setTotalPerPage","productSave","loadingSave","success","successSave","errorSave","productDelete","loadingDelete","successDelete","errorDelete","dispatch","openModal","product","_id","Sifra","Naziv","Cena","Specifikacija","Slika","Proizvodjac","Kategorija","Lager","Sezona","Sirina","Visina","Precnik","submitHandler","e","preventDefault","handlePagination","num","console","log","deleteHandler","uploadFileHandler","file","target","files","bodyFormData","FormData","append","post","headers","then","response","data","catch","err","uploadXmlFileHandler","message","status","closeEl","document","querySelector","setTimeout","click","finally","value","map","totalItems"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACIC,WADJ,EAEIC,YAFJ,EAGIC,aAHJ,QAIO,2BAJP;AAKA,OAAOC,UAAP,MAAuB,qBAAvB;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC3B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACY,EAAD,EAAKC,KAAL,IAAcb,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACsB,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACwB,YAAD,EAAeC,eAAf,IAAkCzB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAC0B,WAAD,EAAcC,cAAd,IAAgC3B,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAC4B,KAAD,EAAQC,QAAR,IAAoB7B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC8B,MAAD,EAASC,SAAT,IAAsB/B,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACgC,QAAD,EAAWC,WAAX,IAA0BjC,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACkC,MAAD,EAASC,SAAT,IAAsBnC,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACoC,YAAD,EAAeC,eAAf,IAAkCrC,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACsC,GAAD,EAAMC,MAAN,IAAgBvC,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACwC,SAAD,EAAYC,YAAZ,IAA4BzC,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAC0C,YAAD,EAAeC,eAAf,IAAkC3C,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAC4C,SAAD,EAAYC,YAAZ,IAA4B7C,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM8C,WAAW,GAAG7C,WAAW,CAAE8C,KAAD,IAAWA,KAAK,CAACD,WAAlB,CAA/B;AACA,QAAM;AAACE,IAAAA,OAAD;AAAUC,IAAAA,QAAV;AAAoBC,IAAAA;AAApB,MAA6BJ,WAAnC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBpD,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACqD,YAAD,EAAeC,eAAf,IAAkCtD,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAMuD,WAAW,GAAGtD,WAAW,CAAE8C,KAAD,IAAWA,KAAK,CAACQ,WAAlB,CAA/B;AACA,QAAM;AACFP,IAAAA,OAAO,EAAEQ,WADP;AAEFC,IAAAA,OAAO,EAAEC,WAFP;AAGFR,IAAAA,KAAK,EAAES;AAHL,MAIFJ,WAJJ;AAMA,QAAMK,aAAa,GAAG3D,WAAW,CAAE8C,KAAD,IAAWA,KAAK,CAACa,aAAlB,CAAjC;AACA,QAAM;AACFZ,IAAAA,OAAO,EAAEa,aADP;AAEFJ,IAAAA,OAAO,EAAEK,aAFP;AAGFZ,IAAAA,KAAK,EAAEa;AAHL,MAIFH,aAJJ;AAKA,QAAMI,QAAQ,GAAG9D,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI2D,WAAJ,EAAiB;AACb/C,MAAAA,eAAe,CAAC,KAAD,CAAf;AACH;;AACDqD,IAAAA,QAAQ,CAAC3D,YAAY,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,CAAb,CAAR;AACA,WAAO,MAAM,CACT;AACH,KAFD;AAGH,GARQ,EAQN,CAACqD,WAAD,EAAcI,aAAd,CARM,CAAT;;AAUA,QAAMG,SAAS,GAAIC,OAAD,IAAa;AAC3B;AACArD,IAAAA,KAAK,CAACqD,OAAO,CAACC,GAAR,IAAe,EAAhB,CAAL;AACA5B,IAAAA,MAAM,CAAC2B,OAAO,CAACE,KAAR,IAAiB,EAAlB,CAAN;AACArD,IAAAA,OAAO,CAACmD,OAAO,CAACG,KAAR,IAAiB,EAAlB,CAAP;AACApD,IAAAA,QAAQ,CAACiD,OAAO,CAACI,IAAR,IAAgB,EAAjB,CAAR;AACA3C,IAAAA,cAAc,CAACuC,OAAO,CAACK,aAAR,IAAyB,EAA1B,CAAd;AACApD,IAAAA,QAAQ,CAAC+C,OAAO,CAACM,KAAR,IAAiB,EAAlB,CAAR;AACAnC,IAAAA,eAAe,CAAC6B,OAAO,CAACO,WAAR,IAAuB,EAAxB,CAAf;AACAlD,IAAAA,WAAW,CAAC2C,OAAO,CAACQ,UAAR,IAAsB,EAAvB,CAAX;AACAjD,IAAAA,eAAe,CAACyC,OAAO,CAACS,KAAR,IAAiB,EAAlB,CAAf;AACAxC,IAAAA,SAAS,CAAC+B,OAAO,CAACU,MAAR,IAAkB,EAAnB,CAAT;AACA/C,IAAAA,QAAQ,CAACqC,OAAO,CAACW,MAAR,IAAkB,EAAnB,CAAR;AACA9C,IAAAA,SAAS,CAACmC,OAAO,CAACY,MAAR,IAAkB,EAAnB,CAAT;AACA7C,IAAAA,WAAW,CAACiC,OAAO,CAACa,OAAR,IAAmB,EAApB,CAAX;AACH,GAfD;;AAgBA,QAAMC,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAlB,IAAAA,QAAQ,CACJ5D,WAAW,CAAC;AACR+D,MAAAA,GAAG,EAAEvD,EADG;AAERwB,MAAAA,YAFQ;AAGRR,MAAAA,KAHQ;AAIRE,MAAAA,MAJQ;AAKRE,MAAAA,QALQ;AAMRE,MAAAA,MANQ;AAORI,MAAAA,GAPQ;AAQRxB,MAAAA,IARQ;AASRE,MAAAA,KATQ;AAURE,MAAAA,KAVQ;AAWRE,MAAAA,KAXQ;AAYRE,MAAAA,QAZQ;AAaRE,MAAAA,YAbQ;AAcRE,MAAAA;AAdQ,KAAD,CADP,CAAR;AAkBH,GApBD;;AAqBA,QAAMyD,gBAAgB,GAAIC,GAAD,IAAS;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAhC,IAAAA,OAAO,CAACgC,GAAD,CAAP;AACApB,IAAAA,QAAQ,CAAC3D,YAAY,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa+E,GAAb,CAAb,CAAR;AACH,GAJD;;AAKA,QAAMG,aAAa,GAAIrB,OAAD,IAAa;AAC/BF,IAAAA,QAAQ,CAAC1D,aAAa,CAAC4D,OAAO,CAACC,GAAT,CAAd,CAAR;AACH,GAFD;;AAGA,QAAMqB,iBAAiB,GAAIP,CAAD,IAAO;AAC7B,UAAMQ,IAAI,GAAGR,CAAC,CAACS,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AACA,UAAMC,YAAY,GAAG,IAAIC,QAAJ,EAArB;AACAD,IAAAA,YAAY,CAACE,MAAb,CAAoB,OAApB,EAA6BL,IAA7B;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYM,YAAZ;AACA/C,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA1C,IAAAA,KAAK,CACA4F,IADL,CACU,cADV,EAC0BH,YAD1B,EACwC;AAChCI,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADuB,KADxC,EAMKC,IANL,CAMWC,QAAD,IAAc;AAChB/E,MAAAA,QAAQ,CAAC+E,QAAQ,CAACC,IAAV,CAAR;AACAtD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KATL,EAUKuD,KAVL,CAUYC,GAAD,IAAS;AACZhB,MAAAA,OAAO,CAACC,GAAR,CAAYe,GAAZ;AACAxD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAbL;AAcH,GApBD;;AAqBA,QAAMyD,oBAAoB,GAAIrB,CAAD,IAAO;AAChC,UAAMQ,IAAI,GAAGR,CAAC,CAACS,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AACA,UAAMC,YAAY,GAAG,IAAIC,QAAJ,EAArB;AACAD,IAAAA,YAAY,CAACE,MAAb,CAAoB,KAApB,EAA2BL,IAA3B;AACA5C,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA1C,IAAAA,KAAK,CACA4F,IADL,CACU,UADV,EACsBH,YADtB,EACoC;AAC5BI,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADmB,KADpC,EAMKC,IANL,CAMWC,QAAD,IAAc;AAChBzD,MAAAA,YAAY,CAACyD,QAAQ,CAACC,IAAT,CAAcI,OAAf,CAAZ;AACA5D,MAAAA,eAAe,CAACuD,QAAQ,CAACM,MAAV,CAAf;AACA3D,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,UAAI4D,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAAd;AACAC,MAAAA,UAAU,CAAC,MAAM;AACb5C,QAAAA,QAAQ,CAAC3D,YAAY,EAAb,CAAR;AACAoG,QAAAA,OAAO,CAACI,KAAR;AACH,OAHS,EAGP,IAHO,CAAV;AAIH,KAfL,EAgBKT,KAhBL,CAgBYC,GAAD,IAAS;AACZ5D,MAAAA,YAAY,CAAC4D,GAAG,CAACH,QAAJ,CAAaC,IAAb,CAAkBI,OAAnB,CAAZ;AACA5D,MAAAA,eAAe,CAAC0D,GAAG,CAACH,QAAJ,CAAaM,MAAd,CAAf;AACAnB,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCe,GAAG,CAACH,QAAvC;AACArD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KArBL,EAqBOiE,OArBP,CAqBe,MAAM,CAEpB,CAvBD;AAwBH,GA7BD;;AA8BA,sBACI;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,sBAAhC;AAAuD,mBAAY,OAAnE;AAA2E,mBAAY,eAAvF;AAAuG,IAAA,OAAO,EAAE,MAAM7C,SAAS,CAAC,EAAD,CAA/H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAII;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,iBAAhC;AAAkD,mBAAY,OAA9D;AAAsE,mBAAY,gBAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,CAFJ,CADJ,eAcI;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAgD,IAAA,EAAE,EAAC,cAAnD;AAAkE,IAAA,QAAQ,EAAC,IAA3E;AAAgF,IAAA,IAAI,EAAC,QAArF;AAA8F,uBAAgB,mBAA9G;AAAkI,mBAAY,MAA9I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,IAAI,EAAC,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,aAAd;AAA4B,IAAA,EAAE,EAAC,mBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,OAAhC;AAAwC,oBAAa,OAArD;AAA6D,kBAAW,OAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,mBAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAFJ,CADJ,eAOI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,QAAQ,EAAEe,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,KAAK,EAAE1C,GAHX;AAII,IAAA,EAAE,EAAC,MAJP;AAKI,IAAA,QAAQ,EAAG2C,CAAD,IAAO1C,MAAM,CAAC0C,CAAC,CAACS,MAAF,CAASqB,KAAV,CAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eASI;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WATJ,eAUI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,KAAK,EAAEjG,IAHX;AAII,IAAA,EAAE,EAAC,MAJP;AAKI,IAAA,QAAQ,EAAGmE,CAAD,IAAOlE,OAAO,CAACkE,CAAC,CAACS,MAAF,CAASqB,KAAV,CAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,eAiBI;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBJ,eAkBI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,KAAK,EAAE/F,KAHX;AAII,IAAA,EAAE,EAAC,OAJP;AAKI,IAAA,QAAQ,EAAGiE,CAAD,IAAOhE,QAAQ,CAACgE,CAAC,CAACS,MAAF,CAASqB,KAAV,CAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBJ,eAyBI;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAzBJ,eA0BI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,KAAK,EAAE7F,KAHX;AAII,IAAA,EAAE,EAAC,OAJP;AAKI,IAAA,QAAQ,EAAG+D,CAAD,IAAO9D,QAAQ,CAAC8D,CAAC,CAACS,MAAF,CAASqB,KAAV,CAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BJ,eAiCI;AAAO,IAAA,IAAI,EAAC,MAAZ;AACO,IAAA,SAAS,EAAC,OADjB;AAEO,IAAA,QAAQ,EAAEvB,iBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjCJ,EAoCK5C,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBApClB,eAqCI;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBArCJ,eAsCI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,KAAK,EAAEtB,QAHX;AAII,IAAA,EAAE,EAAC,OAJP;AAKI,IAAA,QAAQ,EAAG2D,CAAD,IAAO1D,WAAW,CAAC0D,CAAC,CAACS,MAAF,CAASqB,KAAV,CALhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtCJ,eA8CI;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA9CJ,eA+CI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,KAAK,EAAE3E,YAHX;AAII,IAAA,EAAE,EAAC,OAJP;AAKI,IAAA,QAAQ,EAAG6C,CAAD,IAAO5C,eAAe,CAAC4C,CAAC,CAACS,MAAF,CAASqB,KAAV,CALpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/CJ,CADJ,eAwDI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAO,IAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,cAFT;AAGI,IAAA,KAAK,EAAEnF,KAHX;AAII,IAAA,EAAE,EAAC,cAJP;AAKI,IAAA,QAAQ,EAAGqD,CAAD,IAAOpD,QAAQ,CAACoD,CAAC,CAACS,MAAF,CAASqB,KAAV,CAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAUI;AAAO,IAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,eAWI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,cAFT;AAGI,IAAA,KAAK,EAAEjF,MAHX;AAII,IAAA,EAAE,EAAC,cAJP;AAKI,IAAA,QAAQ,EAAGmD,CAAD,IAAOlD,SAAS,CAACkD,CAAC,CAACS,MAAF,CAASqB,KAAV,CAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,eAkBI;AAAO,IAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAlBJ,eAmBI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,cAFT;AAGI,IAAA,KAAK,EAAE/E,QAHX;AAII,IAAA,EAAE,EAAC,cAJP;AAKI,IAAA,QAAQ,EAAGiD,CAAD,IAAOhD,WAAW,CAACgD,CAAC,CAACS,MAAF,CAASqB,KAAV,CALhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBJ,eA0BI;AAAO,IAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCA1BJ,eA2BI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,cAFT;AAGI,IAAA,KAAK,EAAEvF,YAHX;AAII,IAAA,EAAE,EAAC,cAJP;AAKI,IAAA,QAAQ,EAAGyD,CAAD,IAAOxD,eAAe,CAACwD,CAAC,CAACS,MAAF,CAASqB,KAAV,CALpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BJ,eAkCI;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlCJ,eAmCI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,KAAK,EAAE7E,MAHX;AAII,IAAA,EAAE,EAAC,UAJP;AAKI,IAAA,QAAQ,EAAG+C,CAAD,IAAO9C,SAAS,CAAC8C,CAAC,CAACS,MAAF,CAASqB,KAAV,CAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnCJ,eA0CI;AAAO,IAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA1CJ,eA2CI;AACI,IAAA,IAAI,EAAC,aADT;AAEI,IAAA,KAAK,EAAErF,WAFX;AAGI,IAAA,EAAE,EAAC,aAHP;AAII,IAAA,SAAS,EAAC,OAJd;AAKI,IAAA,IAAI,EAAE,CALV;AAMI,IAAA,QAAQ,EAAGuD,CAAD,IAAOtD,cAAc,CAACsD,CAAC,CAACS,MAAF,CAASqB,KAAV,CANnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3CJ,CAxDJ,CADJ,CADJ,CADJ,CAPJ,eA0HI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,mBAAhC;AAAoD,IAAA,EAAE,EAAC,iBAAvD;AAAyE,oBAAa,OAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,iBAAhC;AAAkD,IAAA,OAAO,EAAE/B,aAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKpE,EAAE,GAAG,QAAH,GAAc,SADrB,CAFJ,CA1HJ,CADJ,CADJ,CAdJ,eAoJI;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAgD,IAAA,EAAE,EAAC,eAAnD;AAAmE,IAAA,QAAQ,EAAC,IAA5E;AAAiF,IAAA,IAAI,EAAC,QAAtF;AAA+F,uBAAgB,mBAA/G;AAAmI,mBAAY,MAA/I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,IAAI,EAAC,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,aAAd;AAA4B,IAAA,EAAE,EAAC,mBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,kBAAhC;AAAmD,oBAAa,OAAhE;AAAwE,kBAAW,OAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,mBAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAFJ,CADJ,eAOI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,QAAQ,EAAEoE,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAO,IAAA,IAAI,EAAC,MAAZ;AACO,IAAA,SAAS,EAAC,OADjB;AAEO,IAAA,QAAQ,EAAEsB,oBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAOK1D,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPlB,CADJ,EAUKJ,SAAS,iBAAI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACV;AAAG,IAAA,SAAS,EAAEE,YAAY,GAAG,GAAf,GAAqB,eAArB,GAAuC,gBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCACkCF,SADlC,CADU,CAVlB,CADJ,CADJ,CADJ,CAPJ,eA6BI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,mBAAhC;AAAoD,IAAA,EAAE,EAAC,iBAAvD;AAAyE,oBAAa,OAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CA7BJ,CADJ,CADJ,CApJJ,EA0LK9B,YAAY,iBACT;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,QAAQ,EAAEsE,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKxB,WAAW,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADpB,EAEKG,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,SAAN,CAFlB,CAJJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,eAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,KAAK,EAAE7C,IAHX;AAII,IAAA,EAAE,EAAC,MAJP;AAKI,IAAA,QAAQ,EAAGmE,CAAD,IAAOlE,OAAO,CAACkE,CAAC,CAACS,MAAF,CAASqB,KAAV,CAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CATJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,KAAK,EAAE/F,KAHX;AAII,IAAA,EAAE,EAAC,OAJP;AAKI,IAAA,QAAQ,EAAGiE,CAAD,IAAOhE,QAAQ,CAACgE,CAAC,CAACS,MAAF,CAASqB,KAAV,CAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAnBJ,eA6BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,KAAK,EAAE7F,KAHX;AAII,IAAA,EAAE,EAAC,OAJP;AAKI,IAAA,QAAQ,EAAG+D,CAAD,IAAO9D,QAAQ,CAAC8D,CAAC,CAACS,MAAF,CAASqB,KAAV,CAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eASI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAEvB,iBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAUK5C,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVlB,CA7BJ,eAyCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,KAAK,EAAExB,KAHX;AAII,IAAA,EAAE,EAAC,OAJP;AAKI,IAAA,QAAQ,EAAG6D,CAAD,IAAO5D,QAAQ,CAAC4D,CAAC,CAACS,MAAF,CAASqB,KAAV,CAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAzCJ,eAmDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,eAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,cAFT;AAGI,IAAA,KAAK,EAAEvF,YAHX;AAII,IAAA,EAAE,EAAC,cAJP;AAKI,IAAA,QAAQ,EAAGyD,CAAD,IAAOxD,eAAe,CAACwD,CAAC,CAACS,MAAF,CAASqB,KAAV,CALpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAnDJ,eA6DI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,KAAK,EAAEzF,QAHX;AAII,IAAA,EAAE,EAAC,UAJP;AAKI,IAAA,QAAQ,EAAG2D,CAAD,IAAO1D,WAAW,CAAC0D,CAAC,CAACS,MAAF,CAASqB,KAAV,CALhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CA7DJ,eAuEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AACI,IAAA,IAAI,EAAC,aADT;AAEI,IAAA,KAAK,EAAErF,WAFX;AAGI,IAAA,EAAE,EAAC,aAHP;AAII,IAAA,QAAQ,EAAGuD,CAAD,IAAOtD,cAAc,CAACsD,CAAC,CAACS,MAAF,CAASqB,KAAV,CAJnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAvEJ,eAgFI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKnG,EAAE,GAAG,QAAH,GAAc,SADrB,CADJ,CAhFJ,eAqFI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,OAAO,EAAE,MAAMD,eAAe,CAAC,KAAD,CAFlC;AAGI,IAAA,SAAS,EAAC,kBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CArFJ,CADJ,CADJ,CA3LR,eAgSI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADA,CADJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCsC,QAAQ,CAAC+D,GAAT,CAAc9C,OAAD,iBACV;AAAI,IAAA,GAAG,EAAEA,OAAO,CAACC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BD,OAAO,CAACE,KAAtC,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,OAAO,CAACG,KAAb,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,OAAO,CAACI,IAAb,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,OAAO,CAACQ,UAAb,CAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKR,OAAO,CAACO,WAAb,CALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,mBAAY,OAAlC;AAA0C,mBAAY,eAAtD;AAAsE,IAAA,SAAS,EAAC,QAAhF;AAAyF,IAAA,OAAO,EAAE,MAAMR,SAAS,CAACC,OAAD,CAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAIK,GAJL,eAKI;AACI,IAAA,SAAS,EAAC,QADd;AAEI,IAAA,OAAO,EAAE,MAAMqB,aAAa,CAACrB,OAAD,CAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,CANJ,CADH,CADD,CAXJ,CADJ,CAhSJ,eAqUI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK+C,UAAU,iBAAI,oBAAC,UAAD;AACX,IAAA,UAAU,EAAE9D,IADD;AAEX,IAAA,iBAAiB,EAAEE,YAFR;AAGX,IAAA,eAAe,EAAE4D,UAHN;AAIX,IAAA,kBAAkB,EAAE,CAJT;AAKX,IAAA,QAAQ,EAAE9B,gBALC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADnB,CADJ,CADJ,CArUJ,CADJ;AAsVH;;AAED,eAAe3E,cAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport axios from 'axios';\nimport {\n    saveProduct,\n    listProducts,\n    deleteProdcut,\n} from '../actions/productActions';\nimport Pagination from \"react-js-pagination\";\n\nfunction ProductsScreen(props) {\n    const [modalVisible, setModalVisible] = useState(false);\n    const [id, setId] = useState('');\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState('');\n    const [image, setImage] = useState('');\n    const [brand, setBrand] = useState('');\n    const [category, setCategory] = useState('');\n    const [countInStock, setCountInStock] = useState('');\n    const [description, setDescription] = useState('');\n    const [width, setWidth] = useState('');\n    const [height, setHeight] = useState('');\n    const [diameter, setDiameter] = useState('');\n    const [season, setSeason] = useState('');\n    const [manufacturer, setManufacturer] = useState('');\n    const [key, setKey] = useState('');\n    const [xmlApiMsg, setXmlApiMsg] = useState('');\n    const [xmlApiStatus, setXmlApiStatus] = useState('');\n    const [uploading, setUploading] = useState(false);\n    const productList = useSelector((state) => state.productList);\n    const {loading, products, error} = productList;\n    const [page, setPage] = useState(1);\n    const [totalPerPage, setTotalPerPage] = useState(30);\n\n    const productSave = useSelector((state) => state.productSave);\n    const {\n        loading: loadingSave,\n        success: successSave,\n        error: errorSave,\n    } = productSave;\n\n    const productDelete = useSelector((state) => state.productDelete);\n    const {\n        loading: loadingDelete,\n        success: successDelete,\n        error: errorDelete,\n    } = productDelete;\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (successSave) {\n            setModalVisible(false);\n        }\n        dispatch(listProducts('', '', '', 1));\n        return () => {\n            //\n        };\n    }, [successSave, successDelete]);\n\n    const openModal = (product) => {\n        // setModalVisible(true);\n        setId(product._id || '');\n        setKey(product.Sifra || '');\n        setName(product.Naziv || '');\n        setPrice(product.Cena || '');\n        setDescription(product.Specifikacija || '');\n        setImage(product.Slika || '');\n        setManufacturer(product.Proizvodjac || '');\n        setCategory(product.Kategorija || '');\n        setCountInStock(product.Lager || '');\n        setSeason(product.Sezona || '');\n        setWidth(product.Sirina || '');\n        setHeight(product.Visina || '');\n        setDiameter(product.Precnik || '');\n    };\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(\n            saveProduct({\n                _id: id,\n                manufacturer,\n                width,\n                height,\n                diameter,\n                season,\n                key,\n                name,\n                price,\n                image,\n                brand,\n                category,\n                countInStock,\n                description,\n            })\n        );\n    };\n    const handlePagination = (num) => {\n        console.log(num);\n        setPage(num);\n        dispatch(listProducts('', '', '', num));\n    };\n    const deleteHandler = (product) => {\n        dispatch(deleteProdcut(product._id));\n    };\n    const uploadFileHandler = (e) => {\n        const file = e.target.files[0];\n        const bodyFormData = new FormData();\n        bodyFormData.append('image', file);\n        console.log(bodyFormData);\n        setUploading(true);\n        axios\n            .post('/api/uploads', bodyFormData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            })\n            .then((response) => {\n                setImage(response.data);\n                setUploading(false);\n            })\n            .catch((err) => {\n                console.log(err);\n                setUploading(false);\n            });\n    };\n    const uploadXmlFileHandler = (e) => {\n        const file = e.target.files[0];\n        const bodyFormData = new FormData();\n        bodyFormData.append('xml', file);\n        setUploading(true);\n        axios\n            .post('/api/xml', bodyFormData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            })\n            .then((response) => {\n                setXmlApiMsg(response.data.message);\n                setXmlApiStatus(response.status);\n                setUploading(false);\n                var closeEl = document.querySelector('.-xml-close');\n                setTimeout(() => {\n                    dispatch(listProducts());\n                    closeEl.click();\n                }, 3000)\n            })\n            .catch((err) => {\n                setXmlApiMsg(err.response.data.message);\n                setXmlApiStatus(err.response.status);\n                console.log('error on XML upload', err.response);\n                setUploading(false);\n            }).finally(() => {\n\n        });\n    }\n    return (\n        <div className=\"content content-margined\">\n            <div className=\"product-header mb-4\">\n                <h2>Proizovdi</h2>\n                <div>\n                    <button type=\"button\" className=\"btn btn-primary mx-3\" data-toggle=\"modal\" data-target=\"#exampleModal\" onClick={() => openModal({})}>\n                        Kreiraj proizovd\n                    </button>\n                    <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal1\">\n                        Ubaci XML\n                    </button>\n                </div>\n\n            </div>\n\n            <div className=\"modal fade bd-example-modal-lg\" id=\"exampleModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h2 className=\"modal-title\" id=\"exampleModalLabel\">Kreiraj proizvod</h2>\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <div className=\"form-modal\">\n                                <form onSubmit={submitHandler}>\n                                    <div className=\"row\">\n                                        <div className=\"col-md-6\">\n                                            <label htmlFor=\"name\">Sifra</label>\n                                            <input\n                                                type=\"text\"\n                                                name=\"name\"\n                                                value={key}\n                                                id=\"name\"\n                                                onChange={(e) => setKey(e.target.value)}\n                                            ></input>\n                                            <label htmlFor=\"name\">Ime</label>\n                                            <input\n                                                type=\"text\"\n                                                name=\"name\"\n                                                value={name}\n                                                id=\"name\"\n                                                onChange={(e) => setName(e.target.value)}\n                                            ></input>\n                                            <label htmlFor=\"price\">Cena</label>\n                                            <input\n                                                type=\"text\"\n                                                name=\"price\"\n                                                value={price}\n                                                id=\"price\"\n                                                onChange={(e) => setPrice(e.target.value)}\n                                            ></input>\n                                            <label htmlFor=\"image\">Slika</label>\n                                            <input\n                                                type=\"text\"\n                                                name=\"image\"\n                                                value={image}\n                                                id=\"image\"\n                                                onChange={(e) => setImage(e.target.value)}\n                                            ></input>\n                                            <input type=\"file\"\n                                                   className=\"w-100\"\n                                                   onChange={uploadFileHandler}></input>\n                                            {uploading && <div>Uploading...</div>}\n                                            <label htmlFor=\"brand\">Kategorija</label>\n                                            <input\n                                                type=\"text\"\n                                                name=\"brand\"\n                                                value={category}\n                                                id=\"brand\"\n                                                onChange={(e) => setCategory(e.target.value)}\n                                            ></input>\n\n                                            <label htmlFor=\"brand\">Proizvodjac</label>\n                                            <input\n                                                type=\"text\"\n                                                name=\"brand\"\n                                                value={manufacturer}\n                                                id=\"brand\"\n                                                onChange={(e) => setManufacturer(e.target.value)}\n                                            ></input>\n                                        </div>\n                                        <div className=\"col-md-6\">\n\n                                            <label htmlFor=\"countInStock\">Sirina</label>\n                                            <input\n                                                type=\"text\"\n                                                name=\"countInStock\"\n                                                value={width}\n                                                id=\"countInStock\"\n                                                onChange={(e) => setWidth(e.target.value)}\n                                            ></input>\n                                            <label htmlFor=\"countInStock\">Visina</label>\n                                            <input\n                                                type=\"text\"\n                                                name=\"countInStock\"\n                                                value={height}\n                                                id=\"countInStock\"\n                                                onChange={(e) => setHeight(e.target.value)}\n                                            ></input>\n                                            <label htmlFor=\"countInStock\">Precnik</label>\n                                            <input\n                                                type=\"text\"\n                                                name=\"countInStock\"\n                                                value={diameter}\n                                                id=\"countInStock\"\n                                                onChange={(e) => setDiameter(e.target.value)}\n                                            ></input>\n                                            <label htmlFor=\"countInStock\">Broj raspolozivih jedinica</label>\n                                            <input\n                                                type=\"text\"\n                                                name=\"countInStock\"\n                                                value={countInStock}\n                                                id=\"countInStock\"\n                                                onChange={(e) => setCountInStock(e.target.value)}\n                                            ></input>\n                                            <label htmlFor=\"name\">Sezona</label>\n                                            <input\n                                                type=\"text\"\n                                                name=\"category\"\n                                                value={season}\n                                                id=\"category\"\n                                                onChange={(e) => setSeason(e.target.value)}\n                                            ></input>\n                                            <label htmlFor=\"description\">Opis</label>\n                                            <textarea\n                                                name=\"description\"\n                                                value={description}\n                                                id=\"description\"\n                                                className=\"w-100\"\n                                                rows={6}\n                                                onChange={(e) => setDescription(e.target.value)}\n                                            ></textarea>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-secondary\" id=\"close-modal-btn\" data-dismiss=\"modal\">Odustani</button>\n                            <button type=\"submit\" className=\"btn btn-primary\" onClick={submitHandler}>\n                                {id ? 'Izmeni' : 'Kreiraj'}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"modal fade bd-example-modal-lg\" id=\"exampleModal1\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h2 className=\"modal-title\" id=\"exampleModalLabel\">Kreiraj kategoriju</h2>\n                            <button type=\"button\" className=\"close -xml-close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <div className=\"form-modal\">\n                                <form onSubmit={submitHandler}>\n                                    <div className=\"row\">\n                                        <div className=\"col-md-12\">\n\n\n                                            <label htmlFor=\"image\">XML file</label>\n                                            <input type=\"file\"\n                                                   className=\"w-100\"\n                                                   onChange={uploadXmlFileHandler}/>\n                                            {uploading && <div>Uploading...</div>}\n                                        </div>\n                                        {xmlApiMsg && <div className=\"col-md-12 text-white mt-3\">\n                                            <p className={xmlApiStatus > 250 ? 'bg-danger p-3' : 'bg-success p-3'}>\n                                                STATUS ubacivanja XML fajla: {xmlApiMsg}\n                                            </p>\n                                        </div>}\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-secondary\" id=\"close-modal-btn\" data-dismiss=\"modal\">Zatvori</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {modalVisible && (\n                <div className=\"form\">\n                    <form onSubmit={submitHandler}>\n                        <ul className=\"form-container\">\n                            <li>\n                                <h2>Kreiraj Proizovd</h2>\n                            </li>\n                            <li>\n                                {loadingSave && <div>Loading...</div>}\n                                {errorSave && <div>{errorSave}</div>}\n                            </li>\n\n                            <li>\n                                <label htmlFor=\"name\">Ime</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"name\"\n                                    value={name}\n                                    id=\"name\"\n                                    onChange={(e) => setName(e.target.value)}\n                                ></input>\n                            </li>\n                            <li>\n                                <label htmlFor=\"price\">Cena</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"price\"\n                                    value={price}\n                                    id=\"price\"\n                                    onChange={(e) => setPrice(e.target.value)}\n                                ></input>\n                            </li>\n                            <li>\n                                <label htmlFor=\"image\">Slika</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"image\"\n                                    value={image}\n                                    id=\"image\"\n                                    onChange={(e) => setImage(e.target.value)}\n                                ></input>\n                                <input type=\"file\" onChange={uploadFileHandler}></input>\n                                {uploading && <div>Uploading...</div>}\n                            </li>\n                            <li>\n                                <label htmlFor=\"brand\">Brend</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"brand\"\n                                    value={brand}\n                                    id=\"brand\"\n                                    onChange={(e) => setBrand(e.target.value)}\n                                ></input>\n                            </li>\n                            <li>\n                                <label htmlFor=\"countInStock\">Broj raspolozivih jedinica</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"countInStock\"\n                                    value={countInStock}\n                                    id=\"countInStock\"\n                                    onChange={(e) => setCountInStock(e.target.value)}\n                                ></input>\n                            </li>\n                            <li>\n                                <label htmlFor=\"name\">Kategorija</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"category\"\n                                    value={category}\n                                    id=\"category\"\n                                    onChange={(e) => setCategory(e.target.value)}\n                                ></input>\n                            </li>\n                            <li>\n                                <label htmlFor=\"description\">Opis</label>\n                                <textarea\n                                    name=\"description\"\n                                    value={description}\n                                    id=\"description\"\n                                    onChange={(e) => setDescription(e.target.value)}\n                                ></textarea>\n                            </li>\n                            <li>\n                                <button type=\"submit\" className=\"button primary\">\n                                    {id ? 'Izmeni' : 'Kreiraj'}\n                                </button>\n                            </li>\n                            <li>\n                                <button\n                                    type=\"button\"\n                                    onClick={() => setModalVisible(false)}\n                                    className=\"button secondary\"\n                                >\n                                    Nazad\n                                </button>\n                            </li>\n                        </ul>\n                    </form>\n                </div>\n            )}\n\n            <div className=\"product-list\">\n                <table className=\"table\">\n                    <thead>\n                    <tr>\n                        <th>Sifra</th>\n                        <th>Ime</th>\n                        <th>Cena</th>\n                        <th>Kategorija</th>\n                        <th>Proizvodjac</th>\n                        <th></th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {products.map((product) => (\n                        <tr key={product._id}>\n                            <td className=\"align-center\">{product.Sifra}</td>\n                            <td>{product.Naziv}</td>\n                            <td>{product.Cena}</td>\n                            <td>{product.Kategorija}</td>\n                            <td>{product.Proizvodjac}</td>\n                            <td>\n                                <button type=\"button\" data-toggle=\"modal\" data-target=\"#exampleModal\" className=\"button\" onClick={() => openModal(product)}>\n                                    Edit\n                                </button>\n                                {' '}\n                                <button\n                                    className=\"button\"\n                                    onClick={() => deleteHandler(product)}\n                                >\n                                    Delete\n                                </button>\n                            </td>\n                        </tr>\n                    ))}\n                    </tbody>\n                </table>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <div className=\"pagination-wrapper\">\n                        {totalItems && <Pagination\n                            activePage={page}\n                            itemsCountPerPage={totalPerPage}\n                            totalItemsCount={totalItems}\n                            pageRangeDisplayed={5}\n                            onChange={handlePagination}\n                        />}\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ProductsScreen;\n"]},"metadata":{},"sourceType":"module"}