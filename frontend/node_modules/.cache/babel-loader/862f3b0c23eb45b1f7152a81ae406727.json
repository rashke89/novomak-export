{"ast":null,"code":"import Axios from \"axios\";\nimport Cookie from \"js-cookie\";\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING, CART_SAVE_PAYMENT, CLEAR_CART, UPDATE_CART_ITEM_QTY } from \"../constants/cartConstants\";\n\nconst addToCart = (productId, qty) => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await Axios.get(\"/api/products/\" + productId);\n    dispatch({\n      type: CART_ADD_ITEM,\n      payload: { ...data,\n        Lager: data.Lager && !isNaN(data.Lager) ? Number(data.Lager) : Number(data.Lager.match(/\\d+/)[0]),\n        qty\n      }\n    });\n    const {\n      cart: {\n        cartItems\n      }\n    } = getState();\n    Cookie.set(\"cartItems\", JSON.stringify(cartItems));\n  } catch (error) {}\n};\n\nconst updateCartItemQty = (productId, qty) => dispatch => {\n  dispatch({\n    type: UPDATE_CART_ITEM_QTY,\n    payload: {\n      productId,\n      qty\n    }\n  });\n};\n\nconst removeFromCart = productId => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: productId\n  });\n  const {\n    cart: {\n      cartItems\n    }\n  } = getState();\n  Cookie.set(\"cartItems\", JSON.stringify(cartItems));\n};\n\nconst saveShipping = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_SHIPPING,\n    payload: data\n  });\n};\n\nconst savePayment = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_PAYMENT,\n    payload: data\n  });\n};\n\nconst clearCart = () => dispatch => {\n  Cookie.remove(\"cartItems\");\n  dispatch({\n    type: CLEAR_CART\n  });\n};\n\nexport { addToCart, updateCartItemQty, removeFromCart, saveShipping, savePayment, clearCart };","map":{"version":3,"sources":["D:/project/gume/novomak-export/frontend/src/actions/cartActions.js"],"names":["Axios","Cookie","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING","CART_SAVE_PAYMENT","CLEAR_CART","UPDATE_CART_ITEM_QTY","addToCart","productId","qty","dispatch","getState","data","get","type","payload","Lager","isNaN","Number","match","cart","cartItems","set","JSON","stringify","error","updateCartItemQty","removeFromCart","saveShipping","savePayment","clearCart","remove"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAAQC,aAAR,EAAuBC,gBAAvB,EAAyCC,kBAAzC,EAA6DC,iBAA7D,EAAgFC,UAAhF,EAA4FC,oBAA5F,QAAuH,4BAAvH;;AAEA,MAAMC,SAAS,GAAG,CAACC,SAAD,EAAYC,GAAZ,KAAoB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAClE,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMb,KAAK,CAACc,GAAN,CAAU,mBAAmBL,SAA7B,CAAvB;AACAE,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEb,aADC;AACcc,MAAAA,OAAO,EAAE,EAC5B,GAAGH,IADyB;AAE5BI,QAAAA,KAAK,EAAGJ,IAAI,CAACI,KAAL,IAAc,CAACC,KAAK,CAACL,IAAI,CAACI,KAAN,CAApB,GAAmCE,MAAM,CAACN,IAAI,CAACI,KAAN,CAAzC,GAAwDE,MAAM,CAACN,IAAI,CAACI,KAAL,CAAWG,KAAX,CAAiB,KAAjB,EAAwB,CAAxB,CAAD,CAF1C;AAG5BV,QAAAA;AAH4B;AADvB,KAAD,CAAR;AAOA,UAAM;AAAEW,MAAAA,IAAI,EAAE;AAAEC,QAAAA;AAAF;AAAR,QAA0BV,QAAQ,EAAxC;AACAX,IAAAA,MAAM,CAACsB,GAAP,CAAW,WAAX,EAAwBC,IAAI,CAACC,SAAL,CAAeH,SAAf,CAAxB;AAED,GAZD,CAYE,OAAOI,KAAP,EAAc,CAEf;AACF,CAhBD;;AAiBA,MAAMC,iBAAiB,GAAG,CAAClB,SAAD,EAAYC,GAAZ,KAAqBC,QAAD,IAAc;AAC1DA,EAAAA,QAAQ,CAAC;AACPI,IAAAA,IAAI,EAAER,oBADC;AAEPS,IAAAA,OAAO,EAAE;AACPP,MAAAA,SADO;AACIC,MAAAA;AADJ;AAFF,GAAD,CAAR;AAMD,CAPD;;AAQA,MAAMkB,cAAc,GAAInB,SAAD,IAAe,CAACE,QAAD,EAAWC,QAAX,KAAwB;AAC5DD,EAAAA,QAAQ,CAAC;AAAEI,IAAAA,IAAI,EAAEZ,gBAAR;AAA0Ba,IAAAA,OAAO,EAAEP;AAAnC,GAAD,CAAR;AAEA,QAAM;AAAEY,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AAAR,MAA0BV,QAAQ,EAAxC;AACAX,EAAAA,MAAM,CAACsB,GAAP,CAAW,WAAX,EAAwBC,IAAI,CAACC,SAAL,CAAeH,SAAf,CAAxB;AACD,CALD;;AAMA,MAAMO,YAAY,GAAIhB,IAAD,IAAWF,QAAD,IAAc;AAC3CA,EAAAA,QAAQ,CAAC;AAAEI,IAAAA,IAAI,EAAEX,kBAAR;AAA4BY,IAAAA,OAAO,EAAEH;AAArC,GAAD,CAAR;AACD,CAFD;;AAGA,MAAMiB,WAAW,GAAIjB,IAAD,IAAWF,QAAD,IAAc;AAC1CA,EAAAA,QAAQ,CAAC;AAAEI,IAAAA,IAAI,EAAEV,iBAAR;AAA2BW,IAAAA,OAAO,EAAEH;AAApC,GAAD,CAAR;AACD,CAFD;;AAGA,MAAMkB,SAAS,GAAG,MAAOpB,QAAD,IAAc;AACpCV,EAAAA,MAAM,CAAC+B,MAAP,CAAc,WAAd;AACArB,EAAAA,QAAQ,CAAC;AAACI,IAAAA,IAAI,EAAET;AAAP,GAAD,CAAR;AACD,CAHD;;AAIA,SAASE,SAAT,EACEmB,iBADF,EAEEC,cAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,SALF","sourcesContent":["import Axios from \"axios\";\r\nimport Cookie from \"js-cookie\";\r\nimport {CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING, CART_SAVE_PAYMENT, CLEAR_CART, UPDATE_CART_ITEM_QTY} from \"../constants/cartConstants\";\r\n\r\nconst addToCart = (productId, qty) => async (dispatch, getState) => {\r\n  try {\r\n    const { data } = await Axios.get(\"/api/products/\" + productId);\r\n    dispatch({\r\n      type: CART_ADD_ITEM, payload: {\r\n        ...data,\r\n        Lager:  data.Lager && !isNaN(data.Lager) ? Number(data.Lager) : Number(data.Lager.match(/\\d+/)[0]),\r\n        qty\r\n      }\r\n    });\r\n    const { cart: { cartItems } } = getState();\r\n    Cookie.set(\"cartItems\", JSON.stringify(cartItems));\r\n\r\n  } catch (error) {\r\n\r\n  }\r\n};\r\nconst updateCartItemQty = (productId, qty) => (dispatch) => {\r\n  dispatch({\r\n    type: UPDATE_CART_ITEM_QTY,\r\n    payload: {\r\n      productId, qty\r\n    }\r\n  })\r\n};\r\nconst removeFromCart = (productId) => (dispatch, getState) => {\r\n  dispatch({ type: CART_REMOVE_ITEM, payload: productId });\r\n\r\n  const { cart: { cartItems } } = getState();\r\n  Cookie.set(\"cartItems\", JSON.stringify(cartItems));\r\n};\r\nconst saveShipping = (data) => (dispatch) => {\r\n  dispatch({ type: CART_SAVE_SHIPPING, payload: data });\r\n};\r\nconst savePayment = (data) => (dispatch) => {\r\n  dispatch({ type: CART_SAVE_PAYMENT, payload: data });\r\n};\r\nconst clearCart = () => (dispatch) => {\r\n  Cookie.remove(\"cartItems\");\r\n  dispatch({type: CLEAR_CART})\r\n};\r\nexport { addToCart,\r\n  updateCartItemQty,\r\n  removeFromCart,\r\n  saveShipping,\r\n  savePayment,\r\n  clearCart }"]},"metadata":{},"sourceType":"module"}