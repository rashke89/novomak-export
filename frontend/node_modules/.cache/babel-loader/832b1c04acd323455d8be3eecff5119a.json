{"ast":null,"code":"import { CATEGORY_LIST_REQUEST, CATEGORY_LIST_SUCCESS, CATEGORY_LIST_FAIL, CATEGORY_DETAILS_REQUEST, CATEGORY_DETAILS_SUCCESS, CATEGORY_DETAILS_FAIL, CATEGORY_SAVE_REQUEST, CATEGORY_SAVE_SUCCESS, CATEGORY_SAVE_FAIL, CATEGORY_DELETE_SUCCESS, CATEGORY_DELETE_FAIL, CATEGORY_DELETE_REQUEST, CATEGORY_REVIEW_SAVE_REQUEST, CATEGORY_REVIEW_SAVE_FAIL, CATEGORY_REVIEW_SAVE_SUCCESS } from '../constants/categoryConstants';\nimport axios from 'axios';\nimport Axios from 'axios';\n\nconst listCategories = (category = '', searchKeyword = '', sortOrder = '') => async dispatch => {\n  try {\n    // debugger\n    dispatch({\n      type: CATEGORY_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/category');\n    dispatch({\n      type: CATEGORY_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveCategory = category => async (dispatch, getState) => {\n  // try {\n  dispatch({\n    type: CATEGORY_SAVE_REQUEST,\n    payload: category\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState(); // if (!category._id) {\n  //     const {data} = await Axios.post('/api/category', category, {\n  //         headers: {\n  //             Authorization: 'Bearer ' + userInfo.token,\n  //         },\n  //     });\n  //     dispatch({type: CATEGORY_SAVE_SUCCESS, payload: data});\n  // } else {\n\n  console.log('uso je u else....', category);\n  Axios.put(`/api/category/${category.selectedCategory}/${category._id || 0}`, category, {\n    headers: {\n      Authorization: 'Bearer ' + userInfo.token\n    }\n  }).then(data => {\n    dispatch({\n      type: CATEGORY_SAVE_SUCCESS,\n      payload: data.data\n    });\n  }).catch(error => {\n    dispatch({\n      type: CATEGORY_SAVE_FAIL,\n      payload: error.response.data\n    });\n  }).finally(() => {\n    dispatch(listCategories());\n  }); // console.log(data);\n  // dispatch({ type: CATEGORY_SAVE_SUCCESS, payload: data });\n  // }\n  // } catch (error) {\n  //     dispatch({type: CATEGORY_SAVE_FAIL, payload: error.message});\n  // }\n}; // const detailsCategory = (productId) => async (dispatch) => {\n//   try {\n//     dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\n//     const { data } = await axios.get('/api/products/' + productId);\n//     dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n//   } catch (error) {\n//     dispatch({ type: PRODUCT_DETAILS_FAIL, payload: error.message });\n//   }\n// };\n\n\nconst deleteCategory = category => async (dispatch, getState) => {\n  // try {\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n  dispatch({\n    type: CATEGORY_DELETE_REQUEST,\n    payload: category.id\n  });\n  axios.delete(`/api/category/${category.selectedCategory}/${category.id}`, {\n    headers: {\n      Authorization: 'Bearer ' + userInfo.token\n    }\n  }).then(data => {\n    dispatch({\n      type: CATEGORY_DELETE_SUCCESS,\n      payload: data.data\n    });\n  }).catch(error => dispatch({\n    type: CATEGORY_DELETE_FAIL,\n    payload: error.response.data\n  })).finally(() => {\n    dispatch(listCategories());\n  }); //     dispatch({type: CATEGORY_DELETE_SUCCESS, payload: data, success: true});\n  // } catch (error) {\n  //     dispatch({type: CATEGORY_DELETE_FAIL, payload: error.message});\n  // }\n};\n\nexport { listCategories, saveCategory, deleteCategory };","map":{"version":3,"sources":["/Users/radosmijatovic/projects/novomak-export/frontend/src/actions/categoryAction.js"],"names":["CATEGORY_LIST_REQUEST","CATEGORY_LIST_SUCCESS","CATEGORY_LIST_FAIL","CATEGORY_DETAILS_REQUEST","CATEGORY_DETAILS_SUCCESS","CATEGORY_DETAILS_FAIL","CATEGORY_SAVE_REQUEST","CATEGORY_SAVE_SUCCESS","CATEGORY_SAVE_FAIL","CATEGORY_DELETE_SUCCESS","CATEGORY_DELETE_FAIL","CATEGORY_DELETE_REQUEST","CATEGORY_REVIEW_SAVE_REQUEST","CATEGORY_REVIEW_SAVE_FAIL","CATEGORY_REVIEW_SAVE_SUCCESS","axios","Axios","listCategories","category","searchKeyword","sortOrder","dispatch","type","data","get","payload","error","message","saveCategory","getState","userSignin","userInfo","console","log","put","selectedCategory","_id","headers","Authorization","token","then","catch","response","finally","deleteCategory","id","delete"],"mappings":"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","sourcesContent":["import {\n    CATEGORY_LIST_REQUEST,\n    CATEGORY_LIST_SUCCESS,\n    CATEGORY_LIST_FAIL,\n    CATEGORY_DETAILS_REQUEST,\n    CATEGORY_DETAILS_SUCCESS,\n    CATEGORY_DETAILS_FAIL,\n    CATEGORY_SAVE_REQUEST,\n    CATEGORY_SAVE_SUCCESS,\n    CATEGORY_SAVE_FAIL,\n    CATEGORY_DELETE_SUCCESS,\n    CATEGORY_DELETE_FAIL,\n    CATEGORY_DELETE_REQUEST,\n    CATEGORY_REVIEW_SAVE_REQUEST,\n    CATEGORY_REVIEW_SAVE_FAIL,\n    CATEGORY_REVIEW_SAVE_SUCCESS,\n} from '../constants/categoryConstants';\nimport axios from 'axios';\nimport Axios from 'axios';\n\nconst listCategories = (\n    category = '',\n    searchKeyword = '',\n    sortOrder = ''\n) => async (dispatch) => {\n    try {\n        // debugger\n        dispatch({type: CATEGORY_LIST_REQUEST});\n        const {data} = await axios.get('/api/category');\n        dispatch({type: CATEGORY_LIST_SUCCESS, payload: data});\n    } catch (error) {\n        dispatch({type: CATEGORY_LIST_FAIL, payload: error.message});\n    }\n};\nconst saveCategory = (category) => async (dispatch, getState) => {\n    // try {\n    dispatch({type: CATEGORY_SAVE_REQUEST, payload: category});\n    const {\n        userSignin: {userInfo},\n    } = getState();\n    // if (!category._id) {\n    //     const {data} = await Axios.post('/api/category', category, {\n    //         headers: {\n    //             Authorization: 'Bearer ' + userInfo.token,\n    //         },\n    //     });\n    //     dispatch({type: CATEGORY_SAVE_SUCCESS, payload: data});\n    // } else {\n    console.log('uso je u else....', category);\n    Axios.put(\n        `/api/category/${category.selectedCategory}/${category._id || 0}`,\n        category,\n        {\n            headers: {\n                Authorization: 'Bearer ' + userInfo.token,\n            },\n        })\n        .then(data => {\n            dispatch({type: CATEGORY_SAVE_SUCCESS, payload: data.data})\n        })\n        .catch(error => {\n            dispatch({type: CATEGORY_SAVE_FAIL, payload: error.response.data});\n        })\n        .finally(() => {\n            dispatch(listCategories())\n        });\n    // console.log(data);\n    // dispatch({ type: CATEGORY_SAVE_SUCCESS, payload: data });\n    // }\n    // } catch (error) {\n    //     dispatch({type: CATEGORY_SAVE_FAIL, payload: error.message});\n    // }\n};\n\n// const detailsCategory = (productId) => async (dispatch) => {\n//   try {\n//     dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\n//     const { data } = await axios.get('/api/products/' + productId);\n//     dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n//   } catch (error) {\n//     dispatch({ type: PRODUCT_DETAILS_FAIL, payload: error.message });\n//   }\n// };\n\nconst deleteCategory = (category) => async (dispatch, getState) => {\n    // try {\n    const {\n        userSignin: {userInfo},\n    } = getState();\n    dispatch({type: CATEGORY_DELETE_REQUEST, payload: category.id});\n    axios.delete(`/api/category/${category.selectedCategory}/${category.id}`, {\n        headers: {\n            Authorization: 'Bearer ' + userInfo.token,\n        },\n    })\n        .then((data) => {\n            dispatch({type: CATEGORY_DELETE_SUCCESS, payload: data.data})\n        })\n        .catch(error => dispatch({type: CATEGORY_DELETE_FAIL, payload: error.response.data}))\n        .finally(() => {\n            dispatch(listCategories())\n        });\n    //     dispatch({type: CATEGORY_DELETE_SUCCESS, payload: data, success: true});\n    // } catch (error) {\n    //     dispatch({type: CATEGORY_DELETE_FAIL, payload: error.message});\n    // }\n};\n\nexport {\n    listCategories,\n    saveCategory,\n    deleteCategory,\n};\n"]},"metadata":{},"sourceType":"module"}